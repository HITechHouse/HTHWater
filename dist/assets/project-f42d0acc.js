import{J as s,K as i,aT as l,W as d,M as S,eU as n,e8 as p,aS as g,D as y,dk as R,P as w,hM as J}from"./index-ee1133ea.js";let e=class extends S{constructor(o){super(o),this.geometries=[],this.outSpatialReference=null,this.transformation=null,this.transformForward=null}toJSON(){const o=this.geometries.map(a=>a.toJSON()),t=this.geometries[0],r={};return r.outSR=n(this.outSpatialReference),r.inSR=n(t.spatialReference),r.geometries=JSON.stringify({geometryType:p(t),geometries:o}),this.transformation&&(r.transformation=this.transformation.wkid||JSON.stringify(this.transformation)),this.transformForward!=null&&(r.transformForward=this.transformForward),r}};s([i()],e.prototype,"geometries",void 0),s([i({type:l,json:{read:{source:"outSR"}}})],e.prototype,"outSpatialReference",void 0),s([i()],e.prototype,"transformation",void 0),s([i()],e.prototype,"transformForward",void 0),e=s([d("esri.rest.support.ProjectParameters")],e);const $=e,j=g($);async function F(o,t,r){t=j(t);const a=y(o),f={...a.query,f:"json",...t.toJSON()},m=t.outSpatialReference,c=p(t.geometries[0]),u=R(f,r);return w(a.path+"/project",u).then(({data:{geometries:h}})=>J(h,c,m))}export{$ as m,F as n};
