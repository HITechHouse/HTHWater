import{b as d,c5 as dt,aL as yt,B as Ve,gp as ft,_ as Ze,F as Ue,gG as ht,lx as gt,pg as wt,D as Ft,P as St,aW as R,cD as vt,J as F,K as v,W as M,M as We,aR as xt,ph as He,pi as Q,gx as qt,y as q,cd as Vt,G as Lt,ed as zt,pj as _t,pk as Tt,b_ as N,b$ as C,pl as bt,ee as $t,mj as Et,pm as Ct,mi as Nt,i0 as Se,pn as Ke,a2 as Mt,po as B,e0 as Le,c0 as Ot,pp as D,aK as It,pq as At,pr as G,fS as kt,ea as Xe,a7 as ze,ps as Pt}from"./index-ee1133ea.js";import{N as ue,F as ye,U as V,b as Pe,T as Bt,M as Dt}from"./utils-89f12cd2.js";import{j as _e,d as Qt,c as Rt,m as ge,q as Ye,C as ce,$ as me,P as et,a as Gt,n as jt}from"./utils-07b06940.js";import{a as Jt}from"./executeQueryJSON-1a1762fd.js";import{n as Zt}from"./executeQueryPBF-8cc144fe.js";import{s as Ut}from"./quantizationUtils-3e5cef60.js";import{summaryStatistics as j,uniqueValues as Te,histogram as pe,classBreaks as be,heatmapStatistics as Wt}from"./statsWorker-b7b5f9e7.js";import Ht from"./AttributeBinsQuery-9d4993aa.js";import{a as Kt,b as Xt,m as Yt,c as ea}from"./FixedIntervalBinParameters-264449c4.js";import"./ClassBreaksDefinition-0f1f6d5b.js";import"./query-9bf2487e.js";import"./pbfQueryUtils-efcbbb44.js";import"./pbf-1e25fe11.js";import"./memoryEstimations-c448ab60.js";import"./OptimizedGeometry-3060442a.js";import"./OptimizedFeature-85f1966b.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./featureConversionUtils-f7d818ce.js";import"./queryUtils-7e537050.js";import"./json-48e3ea08.js";function ta(e,t){if(!e.view)throw new d(`${t}:missing-parameters`,"'view' parameter is required for binning");if(e.sqlExpression)throw new d(`${t}:invalid-parameters`,"'sqlExpression' parameter is not supported for binning");if(e.view.type==="3d")throw new d(`${t}:invalid-parameters`,"3d view is not supported for binning")}let ae=class U{constructor(){this.connection=null}async open(t){this.connection=await dt("statsWorker",{strategy:"distributed",signal:t})}destroy(){var t;(t=this.connection)==null||t.close()}static getInstance(){return U.instance||(U.instance=new U),U.instance}async summaryStatistics(t,a){if(!this.connection)throw new d("worker-client:summary-statistics","connection is required");return this.connection.invoke("summaryStatistics",{attribute:t,features:a})}async uniqueValues(t,a){if(!this.connection)throw new d("worker-client:unique-values","connection is required");return this.connection.invoke("uniqueValues",{attribute:t,features:a})}async classBreaks(t,a){if(!this.connection)throw new d("worker-client:class-breaks","connection is required");return this.connection.invoke("classBreaks",{attribute:t,features:a})}async histogram(t,a){if(!this.connection)throw new d("worker-client:histogram","connection is required");return this.connection.invoke("histogram",{attribute:t,features:a})}async heatmapStatistics(t,a){if(!this.connection)throw new d("worker-client:heatmap-statistics","connection is required");return this.connection.invoke("heatmapStatistics",{attribute:t,features:a})}};async function aa(e,t,a,i){return na(t,await ia(e,t,a,i),a,i)}async function ia(e,t,a,i){var c;const r={...i},n=sa(t,a),s=((c=t.outStatistics)==null?void 0:c[0])!=null,o=yt("featurelayer-pbf-statistics"),l=!s||o;let u;if((a==null?void 0:a.format)==="pbf"&&l)try{u=await Zt(e,n,r)}catch(m){if(m.name!=="query:parsing-pbf")throw m;a.format="json"}return(a==null?void 0:a.format)!=="json"&&l||(u=await Jt(e,n,r)),ra(a==null?void 0:a.fieldsIndex,u.fields),u}function ra(e,t){if(e!=null&&t!=null)for(const a of t){const i=e.get(a.name);i&&Object.assign(a,i.toJSON())}}async function na(e,t,a,i){var s;const r=a==null?void 0:a.infoFor3D;if(!tt(e,r)||r==null||!t.assetMaps||!((s=t.features)!=null&&s.length))return Ve.fromJSON(t);const{meshFeatureSetFromJSON:n}=await ft(Ze(()=>import("./meshFeatureSet-47af1087.js"),["assets/meshFeatureSet-47af1087.js","assets/index-ee1133ea.js","assets/index-149229fc.css","assets/Mesh-9168f605.js","assets/axisAngleDegrees-518cf2b4.js","assets/quat-2e3c8037.js","assets/mat3f64-e19cdcb8.js","assets/quatf64-216ddd5a.js","assets/MeshComponent-0478ab9b.js","assets/meshProperties-01219fec.js","assets/MeshLocalVertexSpace-1625db68.js","assets/MeshTransform-70c753bd.js","assets/mat4f64-7b47076d.js","assets/MeshVertexAttributes-c8dc5b24.js","assets/meshVertexSpaceUtils-6f0c1303.js","assets/triangulationUtils-87c1435a.js","assets/earcut-5a6c70eb.js","assets/Indices-c4700608.js","assets/plane-867b9076.js","assets/deduplicate-9944b2d9.js","assets/projectPointToVector-5ad9f65f.js","assets/vertexSpaceConversion-04dc2d09.js","assets/spatialReferenceEllipsoidUtils-fef0e593.js","assets/computeTranslationToOriginAndRotation-d98e4d1f.js","assets/vec3-eed24f88.js","assets/BufferView-ecc75b84.js","assets/vec4-8f193cb6.js","assets/External-3e16a3cf.js","assets/meshFeatureAttributes-3b547717.js"]),i);return n(e,r,t)}function sa(e,t){let a=Ue.from(e);a.sourceSpatialReference=a.sourceSpatialReference??(t==null?void 0:t.sourceSpatialReference)??null,(t!=null&&t.gdbVersion||t!=null&&t.dynamicDataSource)&&(a=a===e?a.clone():a,a.gdbVersion=e.gdbVersion||t.gdbVersion,a.dynamicDataSource=e.dynamicDataSource?ht.from(e.dynamicDataSource):t.dynamicDataSource);const i=t==null?void 0:t.infoFor3D;if(i!=null&&tt(e,i)){a=a===e?a.clone():a,a.formatOf3DObjects=null;const r=gt(i),n=wt(i);for(const s of i.queryFormats){if(s===r){a.formatOf3DObjects=s;break}s!==n||a.formatOf3DObjects||(a.formatOf3DObjects=s)}if(!a.formatOf3DObjects)throw new d("query:unsupported-3d-query-formats","Could not find any supported 3D object query format. Only supported formats are 3D_glb and 3D_gltf");if(a.outFields==null||!a.outFields.includes("*")){a=a===e?a.clone():a,a.outFields==null&&(a.outFields=[]);const{originX:s,originY:o,originZ:l,translationX:u,translationY:c,translationZ:m,scaleX:p,scaleY:y,scaleZ:g,rotationX:h,rotationY:S,rotationZ:w,rotationDeg:x}=i.transformFieldRoles;a.outFields.push(s,o,l,u,c,m,p,y,g,h,S,w,x)}}return a}function tt(e,t){return t!=null&&e.returnGeometry===!0&&e.multipatchOption!=="xyFootprint"&&!e.outStatistics}async function oa(e,t,a,i){const r=Ft(e),{source:n,checkValueRange:s}=t,{classificationDefinition:o}=a,l={...a.toJSON(),f:"json"};let u=null;if(u=(o==null?void 0:o.type)==="class-breaks-definition"?o.classificationField:o==null?void 0:o.attributeField,n){const y={source:n==null?void 0:n.toJSON()};l.layer=JSON.stringify(y)}l.classificationDef&&(l.classificationDef=JSON.stringify(l.classificationDef));let c={query:l};i&&(c={...i,...c});const m={url:r.path,field:u,checkValueRange:s},p=r.path+"/generateRenderer";return St(p,c).then(y=>la(m,y))}function la(e,t){const{field:a,checkValueRange:i,url:r}=e,n=t==null?void 0:t.data;if(!n)return;if(!i){const u=Be(n);return Promise.resolve(u)}const s=new R({statisticType:"min",onStatisticField:a}),o=new R({statisticType:"max",onStatisticField:a}),l=new Ue({outStatistics:[s,o]});return aa(r,l).then(u=>{const c=u.features[0].attributes;let m=null,p=null;for(const y in c)y.toLowerCase().indexOf("min")===0?m=c[y]:p=c[y];return Be(n,m,p)})}function Be(e,t,a){if(e.type==="classBreaks"){const r=vt(e);return{classBreaks:r.classBreakInfos.map((n,s)=>(s===0&&t!=null&&(n.minValue=t),s===r.classBreakInfos.length-1&&a!=null&&(n.maxValue=a),{minValue:n.minValue,maxValue:n.maxValue,label:n.label})),normalizationTotal:r.normalizationTotal}}const{uniqueValueInfos:i}=e;return{uniqueValues:(i==null?void 0:i.map((r,n)=>(n===0&&t!=null&&(r.value=t),n===i.length-1&&a!=null&&(r.value=a),{count:r.count,value:r.value,label:r.label})))??[]}}let W=class extends We{constructor(e){super(e),this.classificationDefinition=null,this.where=null}};F([v({json:{name:"classificationDef",write:!0}})],W.prototype,"classificationDefinition",void 0),F([v({type:String,json:{write:!0}})],W.prototype,"where",void 0),W=F([M("esri.rest.support.GenerateRendererParameters")],W);const ve=W;let O=class extends We{constructor(t){super(t),this.type="unique-value-definition",this.attributeField=null,this.attributeField2=null,this.attributeField3=null,this.fieldDelimiter=null}get uniqueValueFields(){const t=[];return this.attributeField&&t.push(this.attributeField),this.attributeField2&&t.push(this.attributeField2),this.attributeField3&&t.push(this.attributeField3),t}};F([xt({uniqueValueDef:"unique-value-definition"})],O.prototype,"type",void 0),F([v()],O.prototype,"attributeField",void 0),F([v()],O.prototype,"attributeField2",void 0),F([v()],O.prototype,"attributeField3",void 0),F([v({json:{write:!0}})],O.prototype,"fieldDelimiter",void 0),F([v({json:{write:!0}})],O.prototype,"uniqueValueFields",null),O=F([M("esri.rest.support.UniqueValueDefinition")],O);const ua=O,at="no_dominant_category";function ca(e){return{expression:ma(e,{returnFieldName:!0,defaultValue:`'${at}'`})}}function ma(e,t){const{returnFieldName:a,defaultValue:i,layer:r}=t,n=[];if(a&&i){const s=e.map(o=>`${o} <= 0`).join(" AND ");n.push(`WHEN ${s} THEN ${i}`)}for(const s of e){const o=e.reduce((c,m)=>(s!==m&&c.push(`${s} > ${m}`),c),[]).join(" AND "),l=r&&He(r,s),u=a&&`'${s}'`?`'${s}'`:l?Q(s):s;n.push(`WHEN ${o} THEN ${u}`)}return`CASE ${n.join(" ")} ELSE ${i||"0"} END`}function pa(e){return e&&e.map(t=>`$feature["${t}"];`).join(`
`)+`
`||""}function da(e,t=!1){const a=e.map(r=>`"${r}"`),i=`
  if(value != null && value >= 0) {
    if (totalValue == null) { totalValue = 0; }
    totalValue = totalValue + value;
  }
  `;return`
  var fieldNames = [ ${a.join(", ")} ];
  var numFields = ${a.length};
  var maxValueField = null;
  var maxValue = -Infinity;
  var value, i, totalValue = null;

  for(i = 0; i < numFields; i++) {
    value = $feature[fieldNames[i]];

    if(value > 0) {
      if(value > maxValue) {
        maxValue = value;
        maxValueField = fieldNames[i];
      }
      else if (value == maxValue) {
        maxValueField = null;
      }
    }
    ${t?i:""}
  }
  `}function $e(e){const t=da(e);return`
  ${pa(e)}
  ${t}
  return maxValueField;
  `}let b=class extends qt{constructor(t){super(t),this.adapterName="layer-adapter"}};F([v({readOnly:!0})],b.prototype,"adapterName",void 0),F([v({constructOnly:!0})],b.prototype,"layer",void 0),F([v()],b.prototype,"geometryType",void 0),F([v()],b.prototype,"objectIdField",void 0),F([v()],b.prototype,"supportsSQLExpression",void 0),F([v()],b.prototype,"hasQueryEngine",void 0),F([v()],b.prototype,"minScale",void 0),F([v()],b.prototype,"maxScale",void 0),F([v()],b.prototype,"fullExtent",void 0),b=F([M("esri.smartMapping.support.adapters.LayerAdapter")],b);const Ee=b,ya=/_value$/i,fa=Math.LOG10E,ha={SECOND:1e3,MINUTE:6e4,HOUR:36e5},ee=10;function te(e){return e.map(t=>t.toJSON())}function De(e,t){var o;const a=[],i=e.layer,r="featureReduction"in i?i.featureReduction:null,n=(r==null?void 0:r.type)==="binning",s=r!=null&&"fields"in r?(o=r.fields)==null?void 0:o.map(l=>{var u;return(u=l.name)==null?void 0:u.toLowerCase()}).filter(Boolean):[];if(!n||!t)return a;for(const l of t)s.includes(l.toLowerCase())||a.push(l);return a}function de(e,t,a){var r;const i=[];if(t)for(const n of t){const s=e.getField(n);s&&a&&"availableFields"in a&&!((r=a.availableFields)!=null&&r.includes(s.name))&&i.push(s.name)}return i}function Ce(e,t){var n;const a=e&&e.features;if((a==null?void 0:a.length)===0)return{avg:null,count:0,max:null,median:null,min:null,nullcount:0,stddev:null,sum:null,variance:null};const i=(n=a==null?void 0:a[0])==null?void 0:n.attributes,r={};for(const s in i)r[s.replace(ya,"").toLowerCase()]=i[s];return r.totalcount!=null&&r.totalcount>=r.count&&(r.nullcount=r.totalcount-r.count),delete r.totalcount,r.min===r.max&&r.min!=null&&r.stddev==null&&(r.stddev=r.variance=0),t&&(["min","max","avg","stddev","sum","variance"].forEach(s=>{r[s]!=null&&(r[s]=Math.ceil(r[s]))}),r.min===r.max&&r.min!=null&&(r.avg=r.min,r.stddev=r.variance=0)),r}function ga(e){const t=[],a=e.classBreaks,i=a[0].minValue,r=a[a.length-1].maxValue;a.forEach(s=>{t.push([s.minValue,s.maxValue])});const n={field:e.field,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,layer:e.layer};return{min:i,max:r,intervals:t,sqlExpr:J(n),excludeZerosExpr:e.where,normTotal:e.normalizationTotal}}function J(e){const{field:t,normalizationType:a,normalizationField:i,normalizationTotal:r,layer:n}=e,s=He(n,t);let o=t;return a==="percent-of-total"?o=`((${s?Q(t):t} / ${r}) * 100)`:a==="log"?o=`(log(${t}) * ${fa})`:a==="field"?o=`(${s?Q(t):t} / ${i})`:a==="natural-log"?o=`(log(${s?Q(t):t}))`:a==="square-root"&&(o=`(power(${s?Q(t):t}, 0.5))`),o}function it(e,t){let a;if(t=t.toLowerCase(),e){for(const i in e)if(i.toLowerCase()!==t){a=e[i];break}}return a}function H(e,t){let a;if(t=t.toLowerCase(),e){for(const i in e)if(i.toLowerCase()===t){a=e[i];break}}return a}function rt(e,t,a,i,r){const n={},s="countOFExpr";e&&e.features&&e.features.forEach(l=>{const u=l.attributes,c=it(u,s),m=H(u,s);c!=null&&m!=null&&c!==0&&(n[c]=m)});const o=[];return _e(t,a,i).forEach((l,u)=>{const c=(u+1).toString();o.push({minValue:l[0],maxValue:l[1],count:n.hasOwnProperty(c)?n[c]:0})}),{bins:o,minValue:t,maxValue:a,normalizationTotal:r}}async function Ne(e,t){const a=e&&e.features,{field:i,field2:r,field3:n,fieldDelimiter:s,layer:o,view:l,signal:u,labels:c}=t,m=`countOF${(!i||!r)&&i||"Expr"}`,p={};let y=!1;for(const g of a){const h=g.attributes,S=H(h,m);let w=i?H(h,i):it(h,m),x=r?H(h,r):null,z=n?H(h,n):null;w===null&&S===0&&(y=!0),(w==null||typeof w=="string"&&w.trim()==="")&&(w=null),r&&(x==null||typeof x=="string"&&x.trim()==="")&&(x=null),n&&(z==null||typeof z=="string"&&z.trim()==="")&&(z=null);let L=w;r&&(L=`${ge(L)}${s}${ge(x)}`,n&&(L=`${L}${s}${ge(z)}`)),p[L]==null?p[L]={count:S,data:L}:p[L].count=p[L].count+S}if(i&&y){const g=i+" is NULL";try{const h=await o.queryFeatureCount({whereClause:g,view:l,signal:u});return p.null.count=p.null.count+h,we(p,c)}catch{return q(u),we(p,c)}}return we(p,c)}function we(e,t){if(t)for(const a in e)e[a].label=t[a];return{count:e}}async function Fe(e,t,a){const i=e?a.getField(e):null,r=i?a.getFieldDomain(i.name):null;if(r)return r;const{uniqueValueInfos:n}=await a.uniqueValues({field:e,sqlWhere:t.sqlWhere,features:t.features,useFeaturesInView:t.useFeaturesInView,view:t.view,signal:t.signal}),s=n.map(o=>new _t({code:o.value}));return new Tt({codedValues:s})}async function fe(e,t){if(!e.returnAllCodedValues)return[];const{field:a,field2:i,field3:r}=e;if(a&&!i){const s=a?t.getField(a):null,o=s?t.getFieldDomain(s.name):null;return o?[o]:[]}const n=[];return a&&(n.push(Fe(a,e,t)),i&&(n.push(Fe(i,e,t)),r&&n.push(Fe(r,e,t)))),Promise.all(n)}function wa(e,t){return bt(e,new Date(0),t,"milliseconds").sqlExpression}function Fa(e,t){return`EXTRACT(${t} FROM ${e}) * ${ha[t]}`}function Sa(e){return e?Q(["HOUR","MINUTE","SECOND"].map(t=>`(${Fa(e,t)})`).join(" + ")):null}function $(e){var t;return{viewingMode:e.type==="2d"?"map":e.viewingMode,scale:e.scale,spatialReference:(t=e.spatialReference)==null?void 0:t.toJSON()}}function Me(e,t){const a=new Set(e.map(r=>r.value)),i=t.filter(r=>!a.has(r));for(const r of i)e.push({value:r,count:0});e.sort((r,n)=>t.indexOf(r.value)-t.indexOf(n.value));for(const r of e)r.value===at&&(r.value=null);return{predominantCategoryInfos:e}}function Qe(e){const t="featureReduction"in e?e.featureReduction:null;return((t!=null&&"fields"in t?t.fields:null)??[]).map(a=>{const i=va(a,e.fieldsIndex);return i?new Vt({type:i,name:a.name,alias:a.alias}):null}).filter(Lt)}function va(e,t){var a,i;switch(e.statisticType){case"avg":case"avg_angle":return"double";case"count":return"integer";case"min":case"max":case"sum":return e.onStatisticField?((a=t.get(e.onStatisticField))==null?void 0:a.type)??null:e.onStatisticExpression?e.onStatisticExpression.returnType==="string"?null:"double":null;case"mode":return e.onStatisticField?((i=t.get(e.onStatisticField))==null?void 0:i.type)??null:e.onStatisticExpression?e.onStatisticExpression.returnType==="string"?"string":"double":null;default:return null}}function nt(e,t){return N(t)?wa(e,t==null?void 0:t.name):C(t)?Sa(t==null?void 0:t.name):null}function Oe(e,t,a){const{field:i,normalizationType:r,normalizationField:n,normalizationTotal:s,minValue:o,maxValue:l,filter:u}=t,c=e.supportsSQLExpression?nt(e,a)||t.sqlExpression:null,m=J({field:i,normalizationType:r,normalizationField:n,normalizationTotal:s,layer:e}),p=c||m,y=p?ue(p,o,l):null,g=ye({field:i,normalizationField:n,normalizationType:r}),h=V(t.sqlWhere,g),S=V(h,y),w=Qt({normalizationField:n,normalizationType:r,sqlExpression:c,supportsSQLExpression:e.supportsSQLExpression,minValue:o,maxValue:l}),x=zt(e.getField(i??void 0)),{include:z,exclude:L}=t.outStatisticTypes||{},I=Rt.filter(T=>(!z||z.includes(T))&&(!L||!L.includes(T))&&(T==="nullcount"?w:!x||T==="count")),A=e.createQuery();return A.where=V(A.where,S),A.sqlFormat=c?"standard":null,A.outStatistics=I.map(T=>{const k=new R;let P=null,Z=null,ke=`${T}_value`;if(T==="variance")P="var",Z=p;else if(T==="nullcount"){const he=e.objectIdField;P="count",Z=he&&e.getField(he)?he:"1",ke="totalcount_value"}else T==="median"?(P="percentile-continuous",Z=p,k.statisticParameters={value:.5}):(P=T,Z=p);return k.statisticType=P,k.onStatisticField=Z,k.outStatisticFieldName=ke,k}),E(A,u),A}function E(e,t){t&&(e.geometry=t.geometry,e.spatialRelationship=t.spatialRelationship)}function st(e,t){const{field:a,field2:i,field3:r,sqlExpression:n}=t,s=!(!a||!i),o=e.createQuery();return o.where=V(o.where,t.sqlWhere),o.sqlFormat=n?"standard":null,o.outStatistics=[xa(s?null:a,s?"1":n)].filter(Boolean),o.groupByFieldsForStatistics=[a||n,i,r].filter(Boolean),E(o,t.filter),o}function xa(e,t){const a="countOF"+(e||"Expr"),i=new R;return i.statisticType="count",i.onStatisticField=t?"1":e,i.outStatisticFieldName=a,i}function re(e,t,a,i=ee,r,n,s){const{min:o,max:l,normTotal:u,excludeZerosExpr:c}=t,m=t.intervals||_e(o,l,i),p=t.sqlExpr||a;return qa(e,m,p,c,r,n,s).then(y=>({bins:y.map((g,h)=>({minValue:m[h][0],maxValue:m[h][1],count:g.status==="fulfilled"?g.value:0})),minValue:o,maxValue:l,normalizationTotal:u}))}function qa(e,t,a,i,r,n,s){const o=[],l=t.length;for(let u=0;u<l;u++){const c=V(i,V(a+" >= "+t[u][0],t[u][1]!==null?a+(u===l-1?" <= ":" < ")+t[u][1]:""));o.push(c)}return Promise.allSettled(o.map(u=>e.queryFeatureCount({whereClause:u,view:r,filter:n,signal:s})))}const ot="countOFExpr",Va="lowerBoundary",La="upperBoundary";function lt(e,t,a){const i=e.valueExpression||e.sqlExpression,r=e.signal;if(!i){const{field:n,normalizationType:s,normalizationField:o}=e,l=n?t.getField(n):null,u=N(l)||C(l);return{sqlExpression:u?nt(t,l):J({field:n,normalizationType:s,normalizationField:o,normalizationTotal:a,layer:t}),sqlWhere:u?null:e.sqlWhere||ye({field:n,normalizationType:s,normalizationField:o}),filter:e.filter,signal:r}}return{valueExpression:e.valueExpression,sqlExpression:e.sqlExpression,sqlWhere:e.sqlWhere,filter:e.filter,signal:r}}async function xe(e,t,a){const{field:i,normalizationType:r,normalizationField:n,signal:s}=e,o=ye({field:i,normalizationType:r,normalizationField:n}),l=new ve({classificationDefinition:Ye({field:i,normalizationType:r,normalizationField:n,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,definedInterval:e.definedInterval,breakCount:e.numBins||ee}),where:V(o,a)});return t.generateRenderer(l,s).then(u=>{const{normalizationTotal:c,classBreaks:m}=u;return ga({field:i,normalizationType:r,normalizationField:n,normalizationTotal:c,classBreaks:m,where:o,layer:t})})}async function za(e,t,a,i,r){const{field:n,sqlExpression:s,normalizationField:o,classificationMethod:l,normalizationType:u}=e,c=n?t.getField(n):null,m=C(c),p=Nt(c)||m,y=e.numBins||ee;if(p){if(u||l)throw new d(`${t.adapterName}:not-supported`,"NormalizationType and classificationMethod are not supported for date-only and time-only fields");const g=(i-a)/y/1e3,h=g/86400;return new Kt({field:n,expression:s,interval:{unit:m?"seconds":"days",value:Math.ceil(m?g:h)},start:a,end:i})}if(l==="defined-interval")return new Xt({field:n,expression:s,normalizationField:o,normalizationTotal:r,normalizationType:u,interval:e.definedInterval??Math.ceil((i-a)/y),start:u?null:a,end:u?null:i,normalizationMinValue:u?a:null,normalizationMaxValue:u?i:null});if(l==="manual")throw new d(`${t.adapterName}:not-supported`,"Layer does not support manual classificationMethod");if(l==="natural-breaks"||l==="quantile"||l==="standard-deviation"){const g=J({field:n,normalizationField:o,normalizationTotal:r,normalizationType:u,layer:t}),h=e.minValue!==null&&e.maxValue!==null?ue(g,e.minValue,e.maxValue):void 0,S=await xe(e,t,h);if(!S.intervals)throw new d(`${t.adapterName}:invalid`,"Invalid intervals returned from generate renderer");const w=[a,...S.intervals.map(x=>x[1])];return new Yt({field:u?null:n,expression:u?g:s,boundaries:w})}return new ea({field:n,normalizationField:o,normalizationTotal:r,normalizationType:u,expression:s,numBins:y,start:u?null:a,end:u?null:i,normalizationMinValue:u?a:null,normalizationMaxValue:u?i:null})}function ut(e,t,a,i){return a!=null&&i!=null?Promise.resolve({min:a,max:i}):t.summaryStatistics({...e,outStatisticTypes:{include:["min","max"]}}).then(r=>({min:r.min,max:r.max}))}async function ct(e,t,a,i){const{field:r,minValue:n,maxValue:s,filter:o,view:l}=e,u=r?t.getField(r):null,c=$t(u)||Et(u),m=lt(e,t,a),{min:p,max:y}=await ut(m,t,n,s);if(p==null||y==null)return{query:null,min:p,max:y};const g=new R({statisticType:"count",outStatisticFieldName:ot,onStatisticField:"1"}),h=V(i,m.sqlWhere),S="lowerBoundary",w="upperBoundary",x=new Ht({binParameters:await za(e,t,p,y,a),outStatistics:[g],binOrder:e.sortOrder,where:h,lowerBoundaryAlias:S,upperBoundaryAlias:w,outTimeZone:l!=null&&l.timeZone&&c?Ct(l.timeZone):null});return E(x,o),{query:x,min:p,max:y}}function Re(e,t=!1){return typeof e!="string"?e:(t?new Date(`1970-01-01T${e}Z`):new Date(e)).getTime()}function mt(e,t,a){const i=C(t);return{...a,bins:e.features.map(r=>({minValue:Re(r.attributes[Va],i),maxValue:Re(r.attributes[La],i),count:r.attributes[ot]}))}}function Ge(e,t,a){const{valueExpression:i,view:r}=e,{featuresJSON:n,graphics:s,fieldInfos:o}=t,l={field:e.field,valueExpression:i,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:a,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return i&&r&&(n||s)&&(l.viewInfoParams=$(r),l.timeZone=r.timeZone,l.fieldInfos=o),l}const _a=5;let ie=null,K=class extends Ee{constructor(){super(...arguments),this._hasLocalSource=!1,this.adapterName="in-memory-layer-adapter"}destroy(){var e;(e=this.workerClient)==null||e.destroy()}async _waitForLayerViewUpdate(e){if(!e)throw new d(`${this.adapterName}:insufficient-data", "layerView is required to fetch the features`);const t=new AbortController,a=Se(()=>!e.updating,t.signal);await Ke(a,5e3,t).catch(i=>{throw Mt.getLogger(this).warn("LayerView is taking too long to update. Aborting fetch from layerView."),i})}async _fetchFeatureSetFromMemory(e,t,a){const i=this.layer;if(this._hasLocalSource&&"queryFeatures"in i)return i.queryFeatures(e);if(!t)throw new d(`${this.adapterName}:insufficient-data`,"view is required to fetch the features from layerView");const r=await t.whenLayerView(this.layer);return await this._waitForLayerViewUpdate(r),r.queryFeatures(e,{signal:a})}async _fetchFeaturesFromMemory(e,t,a,i){const r=this.layer,n=i==="json";if(this._hasLocalSource&&"queryFeatures"in r){const o=await r.queryFeatures(t);return n?te(o.features):o.features}if(await this._waitForLayerViewUpdate(e),n&&"queryFeaturesJSON"in e&&e.queryFeaturesJSON){const{features:o}=await e.queryFeaturesJSON(t,{signal:a});return o}if(!("queryFeatures"in e))throw new d(`${this.adapterName}:not-supported`,"'queryFeatures' is not supported on the layerView");const s=await e.queryFeatures(t,{signal:a});return n?te(s.features):s.features}_fetchFeaturesForStats(e,t){return B({field:e.field,field2:e.field2,field3:e.field3,normalizationField:e.normalizationField,valueExpression:e.valueExpression}).then(a=>this.getSampleFeatures({sampleSize:-1,view:e.view,returnGeometry:e.returnGeometry,filter:e.filter,requiredFields:a,signal:e.signal},t))}async _summaryStatsFromClientQuery(e,t){const{view:a,signal:i}=e,r=Oe(this,e,t),n=await this._fetchFeatureSetFromMemory(r,a,i),s=Ce(n,N(t)||C(t));return ce(s,e.outStatisticTypes)}async _getNormalizationTotalFromMemory(e,t,a){const{featuresJSON:i,graphics:r,layerView:n,query:s}=t,o={include:["sum"]},l=(!i&&!r&&n&&"querySummaryStatistics"in n?await n.querySummaryStatistics(s,{field:e},{signal:a}):i?await this.workerClient.summaryStatistics({field:e,outStatisticTypes:o},i):await j({attribute:{field:e,outStatisticTypes:o},features:r??[]})).sum;if(l==null)throw new d(`${this.adapterName}:invalid`,"invalid normalizationTotal");return l}async _summaryStatsFromMemory(e,t){const{view:a,field:i,valueExpression:r,normalizationType:n,signal:s}=e,o={field:i,valueExpression:r,normalizationType:n,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,outStatisticTypes:e.outStatisticTypes},{featuresJSON:l,graphics:u,layerView:c,query:m,fieldInfos:p}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"querySummaryStatistics"});return r&&a&&(l||u)&&(o.fieldType=t!=null&&t.type?Le.toJSON(t.type):null,o.viewInfoParams=$(a),o.timeZone=a.timeZone,o.fieldInfos=p),n==="percent-of-total"&&e.normalizationTotal==null&&(o.normalizationTotal=await this._getNormalizationTotalFromMemory(i,{featuresJSON:l,graphics:u,layerView:c,query:m},s)),!l&&!u&&c&&"querySummaryStatistics"in c?c.querySummaryStatistics(m,o,{signal:s}):l?this.workerClient.summaryStatistics(o,l):j({attribute:o,features:u})}async _getFilteredFeatures(e,t){let a=[];if((t==null?void 0:t.spatialRelationship)==="intersects"){const{intersect:i}=await Ze(()=>import("./geometryEngineAsync-cf65c52e.js"),["assets/geometryEngineAsync-cf65c52e.js","assets/index-ee1133ea.js","assets/index-149229fc.css"]),r=t.geometry!=null?t.geometry:null;for(const n of e){const s=n.geometry!=null?n.geometry:null;s&&r&&await i(s,r)&&a.push(n)}}else a=e;return e.length&&"declaredClass"in e[0]&&e[0].declaredClass==="esri.Graphic"?{graphics:a}:{featuresJSON:a}}async _processStatsFromMemoryParams(e){const{features:t,filter:a}=e;if(t!=null&&t.length)return this._getFilteredFeatures(t,a);const{view:i,field:r,field2:n,field3:s,normalizationField:o,valueExpression:l,layerViewFunc:u,signal:c}=e;let m=e.returnGeometry;if(m==null&&l){if(!ie){const{arcadeUtils:x}=await Ot();ie=x}const w=ie.hasGeometryOperations(l);w&&await ie.enableGeometryOperations(),m=w}let p=null,y=null,g=null,h=null,S=null;if(i)try{const w=this.layer.type==="subtype-sublayer"?this.layer.parent:this.layer;p=await i.whenLayerView(w),y=u!=null&&u in p&&typeof p[u]=="function"}catch{y=!1}if(y)try{await this._waitForLayerViewUpdate(p);const w=await B({field:r,field2:n,field3:s,normalizationField:o,valueExpression:l});de(this,w,p).length?y=!1:(g=this.layer.createQuery(),g.outFields=w,g.returnGeometry=!1,E(g,a)),p.suspended&&(y=!1)}catch{y=!1}return y||(h=await this._fetchFeaturesForStats({field:r,field2:n,field3:s,valueExpression:l,normalizationField:o,returnGeometry:m,filter:a,view:i,signal:c},"json"),S=(await B({valueExpression:l})).map(w=>{var x;return(x=this.getField(w))==null?void 0:x.toJSON()}).filter(Boolean)),{layerView:p,query:g,featuresJSON:h,fieldInfos:S}}async _uvFromClientQuery(e,t){const{view:a,signal:i}=e,r=st(this,e),n=await this._fetchFeatureSetFromMemory(r,a,i),s=await Ne(n,{layer:this,field:e.field,field2:e.field2,field3:e.field3,fieldDelimiter:D,view:e.view,signal:e.signal});return me(s,t,e.returnAllCodedValues,D)}async _uvFromMemory(e,t){const{view:a,field:i,valueExpression:r,returnAllCodedValues:n,signal:s}=e,{featuresJSON:o,graphics:l,layerView:u,query:c,fieldInfos:m}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryUniqueValues"}),p={field:i,field2:e.field2,field3:e.field3,fieldDelimiter:D,valueExpression:r,domains:t,returnAllCodedValues:n};return r&&a&&(o||l)&&(p.viewInfoParams=$(a),p.timeZone=a.timeZone,p.fieldInfos=m),!o&&!l&&u&&"queryUniqueValues"in u?u.queryUniqueValues(c,p,{signal:s}):o?this.workerClient.uniqueValues(p,o):Te({attribute:p,features:l})}_histogramForField(e){let t=null;return t=e.minValue!=null&&e.maxValue!=null?Promise.resolve({min:e.minValue,max:e.maxValue}):this.summaryStatistics({...e,outStatisticTypes:{include:["min","max","count"]}}).then(a=>{if(!a.count)throw new d(`${this.adapterName}:insufficient-data`,"Either the layer has no features or none of the features have data for the field");return{min:a.min,max:a.max}}),t.then(a=>re(this,{min:a.min,max:a.max},e.field,e.numBins??void 0,e.view,e.filter,e.signal))}async _histogramFromQueryAttributeBinsFromMemory(e){const{field:t,normalizationType:a,signal:i}=e,r=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAttributeBins"}),{featuresJSON:n,graphics:s,layerView:o,query:l}=r,u=a==="percent-of-total"?e.normalizationTotal??await this._getNormalizationTotalFromMemory(t,r,i):void 0;if(!o||!("queryAttributeBins"in o)||n||s){const g=Ge(e,r,u);return n?this.workerClient.histogram(g,n):pe({attribute:g,features:s})}const{query:c,min:m,max:p}=await ct(e,this,u,l==null?void 0:l.where);if(!c)return{bins:[],minValue:m,maxValue:p,normalizationTotal:u};const y=await o.queryAttributeBins(c,{signal:i});return mt(y,t?this.getField(t):null,{minValue:m,maxValue:p,normalizationTotal:u})}async _histogramFromMemory(e){const{field:t,signal:a}=e,i=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryHistogram"}),{featuresJSON:r,graphics:n,layerView:s,query:o}=i,l=e.normalizationType==="percent-of-total"?e.normalizationTotal??await this._getNormalizationTotalFromMemory(t,i,a):void 0,u=Ge(e,i,l);return!r&&!n&&s&&"queryHistogram"in s?s.queryHistogram(o,u,{signal:a}):r?this.workerClient.histogram(u,r):pe({attribute:u,features:n})}_classBreaksFromInterpolation(e){const{minValue:t,maxValue:a}=e,i=e.numClasses||_a,r=[],n=(a-t)/i;for(let l=0;l<i;l++){const u=t+l*n;r.push({minValue:u,maxValue:u+n})}r[i-1].maxValue=a;const s={classBreaks:r,normalizationTotal:e.normalizationTotal},o=et(s,e.classificationMethod);return Promise.resolve(o)}async _classBreaksFromMemory(e){const{view:t,field:a,valueExpression:i,signal:r}=e,{featuresJSON:n,graphics:s,layerView:o,query:l,fieldInfos:u}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryClassBreaks"}),c={field:a,valueExpression:i,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return i&&t&&(n||s)&&(c.viewInfoParams=$(t),c.timeZone=t.timeZone,c.fieldInfos=u),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(c.normalizationTotal=await this._getNormalizationTotalFromMemory(a,{featuresJSON:n,graphics:s,layerView:o,query:l},r)),!n&&!s&&o&&"queryClassBreaks"in o?o.queryClassBreaks(l,c,{signal:r}):n?this.workerClient.classBreaks(c,n):be({attribute:c,features:s})}async _heatmapStatsFromMemory(e){var u,c;const{view:t,field:a,radius:i,signal:r}=e;It(t,"InMemoryLayerAdapter: must have a view");try{const m=await t.whenLayerView(this.layer);if("queryHeatmapStatistics"in m&&!m.updating&&!e.filter)return await m.queryHeatmapStatistics({field:e.field,radius:e.radius})}catch{q(r)}const{featuresJSON:n,graphics:s}=await this._processStatsFromMemoryParams({...e,returnGeometry:!0}),o=new At({extent:t.extent,tolerance:t.type==="2d"?t.state.resolution:(u=t.pixelSizeAt)==null?void 0:u.call(t,t.center)}),l={field:a,radius:i,transform:Ut(o),spatialReference:(c=t.spatialReference)==null?void 0:c.toJSON(),size:t.size};return n!=null&&n.length||s!=null&&s.length?n?this.workerClient.heatmapStatistics(l,n):Wt({attribute:l,features:s}):{min:null,max:null}}getField(e=""){return this.layer.getField(e)}getFieldUsageInfo(e){return this.getField(e)?{supportsLabelingInfo:!0,supportsRenderer:!0,supportsPopupTemplate:!0,supportsLayerQuery:!0,supportsStatistics:!0}:null}getFieldDomain(e,t){return this.layer.getFieldDomain(e,t)}createQuery(){return this.layer.createQuery()}async summaryStatistics(e){const{field:t,valueExpression:a,sqlExpression:i,features:r,view:n}=e,s=t?this.getField(t):null,o=!!a,l=(n==null?void 0:n.type)==="3d";if(!a&&i&&!this.supportsSQLExpression)throw new d(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return o||r||l?this._summaryStatsFromMemory(e,s):this._summaryStatsFromClientQuery(e,s)}async uniqueValues(e){const{valueExpression:t,sqlExpression:a,features:i,view:r}=e,n=await fe(e,this),s=!!t,o=(r==null?void 0:r.type)==="3d";if(!t&&a&&!this.supportsSQLExpression)throw new d(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return s||i||o?this._uvFromMemory(e,n):this._uvFromClientQuery(e,n)}async histogram(e){const{features:t,valueExpression:a,normalizationType:i,sqlExpression:r}=e,n=t||!!a;if(!a&&r&&!this.supportsSQLExpression)throw new d(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return n||i?this._histogramFromMemory(e):this._histogramForField(e)}async classBreaks(e){return e.analyzeData!==!1?this._classBreaksFromMemory(e):this._classBreaksFromInterpolation(e)}async queryFeatureCount(e){const{whereClause:t,view:a,signal:i}=e;if(!a)throw new d(`${this.adapterName}:insufficient-data`,"view is required to fetch the features from layerView");const r=this.layer.createQuery();r.where=V(r.where,t);const n=await a.whenLayerView(this.layer);return await Se(()=>!n.updating,i),n.queryFeatureCount(r,{signal:i})}async generateRenderer(e,t){throw new d(`${this.adapterName}:not-supported`,"Layer does not support generateRenderer operation")}async predominantCategories(e){const{fields:t,view:a,signal:i,filter:r}=e,n=$e(t),s=await this._uvFromMemory({valueExpression:n,view:a,signal:i,filter:r});return Me(s.uniqueValueInfos,t)}async heatmapStatistics(e){return this._heatmapStatsFromMemory(e)}async getSampleFeatures(e,t){const{view:a,sampleSize:i,requiredFields:r,returnGeometry:n,filter:s,signal:o}=e,l=this.layer.createQuery(),u=1;if(l.outSpatialReference=a==null?void 0:a.spatialReference,l.returnGeometry=!!n,l.outFields=r,E(l,s),!a)throw new d(`${this.adapterName}:not-supported`,"view is required to get sample features for Layer");const c=await a.whenLayerView(this.layer);if(de(this,r,c).length)throw new d(`${this.adapterName}:not-supported`,"Required fields need to be passed in the outFields for Layer");const m=await this._fetchFeaturesFromMemory(c,l,o,t),p=i!=null&&i>0&&i<=m.length?i:m.length;return G(m,p,u)}load(e){const t=this.layer.load(e).then(async a=>{var i,r,n;this.geometryType=a.geometryType,this.objectIdField=a.objectIdField,this.supportsSQLExpression=a.type==="stream"||!!((r=(i=a.capabilities)==null?void 0:i.query)!=null&&r.supportsSqlExpression),this.minScale=a.minScale,this.maxScale=a.maxScale,this.fullExtent="fullExtent"in a?a.fullExtent:(n=a.parent)==null?void 0:n.fullExtent,this._hasLocalSource=!1,this.hasQueryEngine=!0,this.workerClient=ae.getInstance(),await this.workerClient.open(e.signal)});return this.addResolvingPromise(t),Promise.resolve(this)}};F([v({readOnly:!0})],K.prototype,"adapterName",void 0),F([v({constructOnly:!0})],K.prototype,"layer",void 0),K=F([M("esri.smartMapping.support.adapters.InMemoryLayerAdapter")],K);const Ie=K,je=5,Je=2e4,Ta=4e5;let X=class extends Ie{constructor(){super(...arguments),this.adapterName="feature-layer-adapter"}_isStatsSupportedOnService(){var t,a;const e=this.layer;if(!((a=(t=e.capabilities)==null?void 0:t.query)!=null&&a.supportsStatistics)||this.geometryType==="multipatch"&&!kt(e.url)&&e.version<10.5)throw new d(`${this.adapterName}:not-supported`,"Layer does not support statistics query");return Promise.resolve()}_fetchFeaturesFromService(e,t){return this.layer.queryFeatures(e,{signal:t}).then(a=>a.features)}_fetchFeaturesJSONFromService(e,t){return this._fetchFeaturesFromService(e,t).then(te)}_summaryStatsFromGenRend(e){const t=e.normalizationType,a=e.normalizationField;return this.classBreaks({field:e.field,numClasses:je,classificationMethod:"standard-deviation",standardDeviationInterval:.25,normalizationType:t,normalizationField:t==="field"?a:void 0,minValue:e.minValue,maxValue:e.maxValue,filter:e.filter,signal:e.signal}).then(i=>{var l;let r,n,s;if((l=i.classBreakInfos)==null||l.some(u=>(u.hasAvg&&(r=u),!!r)),r){const u=r.maxValue-r.minValue;n=r.minValue+u/2,s=4*u}const o={min:i.minValue,max:i.maxValue,avg:n,stddev:s};return ce(o,e.outStatisticTypes)})}async _summaryStatsFromServiceQuery(e,t){await this._isStatsSupportedOnService(),e.normalizationType==="percent-of-total"&&(e.normalizationTotal=await this._getNormalizationTotal(e.field,e.normalizationType,e.filter));const a=N(t)||C(t),i=Oe(this,e,t),r=await this.layer.queryFeatures(i,{signal:e.signal}),n=Ce(r,a);return ce(n,e.outStatisticTypes)}_uvFromGenRenderer(e,t){const a=e.field??void 0,i=new ua({attributeField:a}),r=new ve({classificationDefinition:i});return this.generateRenderer(r,e.signal).then(n=>{const s={},o=this.getField(a);return n.uniqueValues.forEach(l=>{let u=l.value;u!=null&&u!==""&&(typeof u!="string"||u.trim()!==""&&u.toLowerCase()!=="<null>")||(u=null),s[u]==null?s[u]={count:l.count,data:Xe(o)&&u?Number(u):u}:s[u].count=s[u].count+l.count}),{count:s}}).then(n=>me(n,[t],e.returnAllCodedValues))}async _uvFromServiceQuery(e,t){return this._isStatsSupportedOnService().then(()=>this.layer.queryFeatures(st(this,e),{signal:e.signal})).then(a=>Ne(a,{layer:this,field:e.field,field2:e.field2,field3:e.field3,fieldDelimiter:D,view:e.view,signal:e.signal})).then(a=>me(a,t,e.returnAllCodedValues,D))}_getNormalizationTotal(e,t,a,i){return e&&t==="percent-of-total"?this.summaryStatistics({field:e,outStatisticTypes:{include:["sum"]},filter:a,signal:i}).then(r=>r.sum):Promise.resolve(null)}_histogramForExpr(e){return this._getNormalizationTotal(e.field,e.normalizationType,e.filter,e.signal).then(t=>{const a=lt(e,this,t);return ut(a,this,e.minValue,e.maxValue).then(i=>{const r=i.min,n=i.max;if(r==null||n==null)return{bins:[],minValue:r,maxValue:n,normalizationTotal:t};const s=e.numBins||ee,o=_e(r,n,s),l=ba(a.sqlExpression,o,e.minValue!=null&&e.maxValue!=null),u=new R({statisticType:"count",outStatisticFieldName:"countOFExpr",onStatisticField:"1"}),c=this.layer.createQuery();return c.where=V(c.where,a.sqlWhere),c.sqlFormat="standard",c.outStatistics=[u],c.groupByFieldsForStatistics=[l],c.orderByFields=[l],E(c,e.filter),this._isStatsSupportedOnService().then(()=>this.layer.queryFeatures(c,{signal:a.signal})).then(m=>rt(m,r,n,s,t))})})}async _histogramFromQueryAttributeBins(e){const{field:t,normalizationType:a,filter:i,signal:r}=e,n=await this._getNormalizationTotal(t,a,i,r),s=this.layer.createQuery(),{query:o,min:l,max:u}=await ct(e,this,n,s==null?void 0:s.where);if(!o)return{bins:[],minValue:l,maxValue:u,normalizationTotal:n};const c=await this.layer.queryAttributeBins(o,{signal:r});return mt(c,t?this.getField(t):null,{minValue:l,maxValue:u,normalizationTotal:n})}_classBreaksFromGenRend(e){const{field:t,normalizationType:a,normalizationField:i,normalizationTotal:r,signal:n}=e,s=ye({field:t,normalizationType:a,normalizationField:i}),o=J({field:t,normalizationType:a,normalizationField:i,normalizationTotal:r,layer:this}),l=ue(o,e.minValue,e.maxValue),u=Ye({field:t,normalizationType:a,normalizationField:i,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,breakCount:e.numClasses||je}),c=new ve({classificationDefinition:u});return c.where=V(s,l),this.generateRenderer(c,n).then(m=>et(m,e.classificationMethod))}async summaryStatistics(e){const{field:t,normalizationType:a,valueExpression:i,sqlExpression:r,view:n,features:s,useFeaturesInView:o}=e,l=t?this.getField(t):null,u=N(l)||C(l),c=i&&!(r&&this.supportsSQLExpression),m=this._hasLocalSource||s||o,p=n&&n.type==="3d";if(m||c)return c||s||o||p?this._summaryStatsFromMemory(e,l):this._summaryStatsFromClientQuery(e,l);if(!this.supportsSQLExpression&&(u||r||a==="natural-log"||a==="square-root"))throw new d(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return(a&&!this.supportsSQLExpression?this._summaryStatsFromGenRend(e):this._summaryStatsFromServiceQuery(e,l)).catch(()=>(q(e.signal),this._summaryStatsFromMemory(e,l)))}async uniqueValues(e){const{valueExpression:t,sqlExpression:a,features:i,useFeaturesInView:r,signal:n}=e,s=t&&!(a&&this.supportsSQLExpression),o=this._hasLocalSource||i||r||s,l=e.view,u=l&&l.type==="3d",c=await fe(e,this);return o?s||i||r||u?this._uvFromMemory(e,c):this._uvFromClientQuery(e,c):this._uvFromServiceQuery(e,c).catch(m=>(q(n),!e.field||e.field2||e.field3||e.filter?m:this._uvFromGenRenderer(e,c[0]))).catch(()=>(q(n),u?this._uvFromMemory(e,c):this._uvFromClientQuery(e,c)))}async histogram(e){var z,L;const{field:t,normalizationType:a,normalizationField:i,classificationMethod:r,view:n,filter:s,signal:o}=e,l=t?this.getField(t):null,u=N(l)||C(l),c=e.valueExpression||e.sqlExpression,m=e.valueExpression&&!(e.sqlExpression&&this.supportsSQLExpression),p=this._hasLocalSource||e.features||e.useFeaturesInView||m,y=this.supportsSQLExpression,g=!r||r==="equal-interval",h=e.minValue,S=e.maxValue,w=h!=null&&S!=null,x=e.numBins||ee;if(p)return this._histogramFromMemory(e);if((L=(z=this.layer.capabilities)==null?void 0:z.operations)!=null&&L.supportsQueryBins&&e.useQueryAttributeBins)try{return await this._histogramFromQueryAttributeBins(e)}catch{return q(o),this._histogramFromQueryAttributeBinsFromMemory(e)}if((c||y)&&g){if(!y&&(c||a==="natural-log"||a==="square-root"))throw new d(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return this._histogramForExpr(e)}if(u&&g)throw new d(`${this.adapterName}:not-supported`,"Normalization and date field are not allowed when layer does not support standardized SQL expression for queries");return a||!g?xe(e,this).then(I=>{if(!w)return re(this,I,t,x,n,s,o);if(h>I.max||S<I.min)throw new d(`${this.adapterName}:insufficient-data`,"Range defined by 'minValue' and 'maxValue' does not intersect available data range of the field");if(g)return re(this,{min:h,max:S,sqlExpr:I.sqlExpr,excludeZerosExpr:I.excludeZerosExpr},t,x,n,s,o);{const A={field:t,normalizationType:a,normalizationField:i,normalizationTotal:I.normTotal,layer:this},T=J(A),k=ue(T,h,S);return xe(e,this,k).then(P=>re(this,P,t,x,n,s,o))}}):this._histogramForField(e)}async classBreaks(e){const t=e.analyzeData!==!1,a=this._hasLocalSource||e.features||e.useFeaturesInView||e.valueExpression||e.filter;return t&&a?this._classBreaksFromMemory(e):(t?this._classBreaksFromGenRend(e):this._classBreaksFromInterpolation(e)).catch(()=>(q(e.signal),this._classBreaksFromMemory(e)))}async queryFeatureCount(e){if(this._hasLocalSource)throw new d(`${this.adapterName}:not-supported`,"Layer does not support count query");const t=this.layer,a=t.createQuery();return a.where=V(a.where,e.whereClause),E(a,e.filter),t.queryFeatureCount(a,{signal:e.signal})}async generateRenderer(e,t){var r;const a=this.layer;if(this._hasLocalSource||a.version<10.1)throw new d(`${this.adapterName}:not-supported`,"Layer does not support generateRenderer operation (requires ArcGIS Server version 10.1+)");const i=a.createQuery();return e.where=V(e.where,i.where),oa(((r=a.parsedUrl)==null?void 0:r.path)??"",{source:a.dynamicDataSource??void 0,gdbVersion:a.gdbVersion??void 0},e,{signal:t})}async predominantCategories(e){if(!this._hasLocalSource&&!this.supportsSQLExpression)throw new d(`${this.adapterName}:not-supported`,"Layer does not support advanced SQL expressions and standardized queries");const{fields:t,view:a,signal:i,filter:r}=e,n=$e(t),s=ca(t),o=a&&this._hasLocalSource?await this._uvFromMemory({valueExpression:n,view:a,signal:i,filter:r}):await this._uvFromServiceQuery({sqlExpression:s.expression,valueExpression:n,signal:i,filter:r});return Me(o.uniqueValueInfos,t)}async getSampleFeatures(e,t){var y,g;const{view:a,requiredFields:i,returnGeometry:r,filter:n,signal:s}=e,o=e.sampleSize;if(o==null||o===0)return[];const l=this.layer.createQuery(),u=1,c=t==="json";l.outSpatialReference=a==null?void 0:a.spatialReference,l.returnGeometry=!!r,l.outFields=i,E(l,n);let m=[],p=!1;if(a)try{const h=await a.whenLayerView(this.layer);if(p=!de(this,i,h).length,p){if(o>=1&&!e.filter&&"getSampleFeatures"in h){await this._waitForLayerViewUpdate(h);const S=await h.getSampleFeatures({minFeatureCount:o,sampleSize:o});if(S!=null)return c?S:S.map(w=>ze.fromJSON(w))}if(m=await this._fetchFeaturesFromMemory(h,l,s,t),m.length>=o&&o>0)return G(m,o,u)}}catch{q(s)}try{if(this._hasLocalSource)return p?m:c?await this._fetchFeaturesJSONFromService(l,s):await this._fetchFeaturesFromService(l,s);const h=await this.queryFeatureCount({view:a,filter:n,signal:s}),S=this.layer.capabilities.query.maxRecordCount;let w=o===-1?h:o;if(w=S&&w>S?S:w,h<=m.length||m.length>=S)return m;if(l.maxAllowableOffset=e.resolution||(a?a.extent.width/a.width/a.scale:Pt(this.layer.spatialReference))*Ta,h<=w)return c?await this._fetchFeaturesJSONFromService(l,s):await this._fetchFeaturesFromService(l,s);if(h<=Je){const x=this.layer.createQuery();E(x,n);const z=await this.layer.queryObjectIds();return l.objectIds=G(z,w,u),c?await this._fetchFeaturesJSONFromService(l,s):await this._fetchFeaturesFromService(l,s)}return(g=(y=this.layer.capabilities)==null?void 0:y.query)!=null&&g.supportsPagination&&(l.num=Math.min(w,Je)),c?await this._fetchFeaturesJSONFromService(l,s):await this._fetchFeaturesFromService(l,s)}catch{return q(s),m}}load(e){const t=this.layer.load(e).then(async a=>{var i,r;this.geometryType=a.geometryType,this.objectIdField=a.objectIdField,this.supportsSQLExpression=(r=(i=a.capabilities)==null?void 0:i.query)==null?void 0:r.supportsSqlExpression,this._hasLocalSource=!a.url&&!!a.source,this.hasQueryEngine=this._hasLocalSource,this.minScale=a.minScale,this.maxScale=a.maxScale,this.fullExtent=a.fullExtent,this.workerClient=ae.getInstance(),await this.workerClient.open(e.signal)});return this.addResolvingPromise(t),Promise.resolve(this)}};function ba(e,t,a){const i=[],r=t.length;return t.forEach((n,s)=>{const[o,l]=n;let u=null;u=s!==0||a?s!==r-1||a?V(`${e} >= ${o}`,`${e} ${s===r-1?" <= ":" < "} ${l}`):`${e} >= ${o}`:`${e} < ${l}`,i.push("WHEN ("+u+") THEN "+(s+1))}),["CASE",i.join(" "),"ELSE 0","END"].join(" ")}F([v({readOnly:!0})],X.prototype,"adapterName",void 0),F([v({constructOnly:!0})],X.prototype,"layer",void 0),X=F([M("esri.smartMapping.support.adapters.FeatureLayerAdapter")],X);const _=X;let ne=class extends _{constructor(){super(...arguments),this.adapterName="csv-layer-adapter"}async _createGenerateRendererResult(t,a,i,r,n){const s=t==null?void 0:t.features;if(!(s==null?void 0:s.length))throw new d("csv-layer-adapter:insufficient-data","No features are available to calculate statistics");const l=te(s);let u=null;if(r==="percent-of-total"&&(u=(await this.workerClient.summaryStatistics({field:a},l)).sum,u==null))throw new d("csv-layer-adapter:invalid","invalid normalizationTotal");if((n==null?void 0:n.type)==="class-breaks-definition"){const m=(await Pe({field:a,normalizationType:r,normalizationField:i,normalizationTotal:u},l)).filter(p=>Number.isFinite(p));return Gt({definition:n,values:m,normalizationTotal:u})}const c=(await Pe({field:a},l)).filter(m=>m!=null&&typeof m=="string"&&m.trim()!=="");return jt(c)}generateRenderer(t,a){const i=t.classificationDefinition;let r=null,n=null,s=null;(i==null?void 0:i.type)==="class-breaks-definition"?(r=i.classificationField,n=i.normalizationField,s=i.normalizationType):r=i==null?void 0:i.attributeField;const o=this.layer;return B({field:r,normalizationField:n}).then(l=>{const u=o.createQuery();return u.returnGeometry=!1,u.outFields=l,u.where=V(u.where,t.where),o.queryFeatures(u,{signal:a}).then(c=>this._createGenerateRendererResult(c,r,n,s,i))})}load(t){const a=this.layer.load(t).then(async i=>{this.geometryType=i.geometryType,this.objectIdField=i.objectIdField,this.supportsSQLExpression=!0,this._hasLocalSource=!1,this.hasQueryEngine=!0,this.workerClient=ae.getInstance(),await this.workerClient.open(t.signal)});return this.addResolvingPromise(a),Promise.resolve(this)}};F([v({readOnly:!0})],ne.prototype,"adapterName",void 0),ne=F([M("esri.smartMapping.support.adapters.CSVLayerAdapter")],ne);const $a=ne;let se=class extends _{constructor(){super(...arguments),this.adapterName="feature-layer-binning-adapter"}async _getNormalizationTotalFromMemory(e,t,a){const{featuresJSON:i,graphics:r,layerView:n,query:s}=t,o={include:["sum"]},l=(!i&&!r&&n&&"queryAggregateSummaryStatistics"in n?await n.queryAggregateSummaryStatistics(s,{field:e,outStatisticTypes:o},{signal:a}):i?await this.workerClient.summaryStatistics({field:e},i):await j({attribute:{field:e,outStatisticTypes:o},features:r})).sum;if(l==null)throw new d(`${this.adapterName}:invalid`,"invalid normalizationTotal");return l}async _processStatsFromMemoryParams(e){const{features:t,filter:a}=e;if(t!=null&&t.length)return this._getFilteredFeatures(t,a);const{view:i,field:r,field2:n,field3:s,normalizationField:o,valueExpression:l,returnGeometry:u,layerViewFunc:c,signal:m}=e;let p=null,y=null,g=null,h=null,S=null;if(i)try{if(p=await i.whenLayerView(this.layer),y=c!=null&&c in p&&typeof p[c]=="function",y){await this._waitForLayerViewUpdate(p);const w=await B({field:r,field2:n,field3:s,normalizationField:o,valueExpression:l});De(this,w).length?y=!1:(g="createAggregateQuery"in p?p.createAggregateQuery():null,g?(g.outFields=w,g.returnGeometry=!1,E(g,a)):y=!1),p.suspended&&(y=!1)}}catch{y=!1}if(!y&&(S=Qe(this.layer).map(w=>w.toJSON()),h=await this._fetchFeaturesForStats({field:r,field2:n,field3:s,valueExpression:l,normalizationField:o,returnGeometry:u,filter:a,view:i,signal:m},"json"),!(h!=null&&h.length)))throw new d(`${this.adapterName}:insufficient-data`,"No features are available to calculate statistics");return{layerView:p,query:g,featuresJSON:h,fieldInfos:S}}async _summaryStatsFromMemory(e,t){const{view:a,field:i,valueExpression:r,normalizationType:n,signal:s}=e,o={field:i,valueExpression:r,normalizationType:n,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,outStatisticTypes:e.outStatisticTypes},{featuresJSON:l,graphics:u,layerView:c,query:m,fieldInfos:p}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateSummaryStatistics"});return r&&a&&(l||u)&&(o.fieldType=t!=null&&t.type?Le.toJSON(t.type):null,o.viewInfoParams=$(a),o.timeZone=a.timeZone,o.fieldInfos=p),n==="percent-of-total"&&e.normalizationTotal==null&&(o.normalizationTotal=await this._getNormalizationTotalFromMemory(i,{featuresJSON:l,graphics:u,layerView:c,query:m},s)),!l&&!u&&c&&"queryAggregateSummaryStatistics"in c?c.queryAggregateSummaryStatistics(m,o,{signal:s}):l?this.workerClient.summaryStatistics(o,l):j({attribute:o,features:u})}async _uvFromMemory(e,t){const{view:a,field:i,valueExpression:r,returnAllCodedValues:n,signal:s}=e,{featuresJSON:o,graphics:l,layerView:u,query:c,fieldInfos:m}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateUniqueValues"}),p={field:i,field2:e.field2,field3:e.field3,fieldDelimiter:D,valueExpression:r,domains:t,returnAllCodedValues:n};return r&&a&&(o||l)&&(p.viewInfoParams=$(a),p.timeZone=a.timeZone,p.fieldInfos=m),!o&&!l&&u&&"queryAggregateUniqueValues"in u?u.queryAggregateUniqueValues(c,p,{signal:s}):o?this.workerClient.uniqueValues(p,o):Te({attribute:p,features:l})}async _histogramFromMemory(e){const{view:t,field:a,valueExpression:i,signal:r}=e,{featuresJSON:n,graphics:s,layerView:o,query:l,fieldInfos:u}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateHistogram"}),c={field:a,valueExpression:i,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return i&&t&&(n||s)&&(c.viewInfoParams=$(t),c.timeZone=t.timeZone,c.fieldInfos=u),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(c.normalizationTotal=await this._getNormalizationTotalFromMemory(a,{featuresJSON:n,graphics:s,layerView:o,query:l},r)),!n&&!s&&o&&"queryAggregateHistogram"in o?o.queryAggregateHistogram(l,c,{signal:r}):n?this.workerClient.histogram(c,n):pe({attribute:c,features:s})}async _classBreaksFromMemory(e){const{view:t,field:a,valueExpression:i,signal:r}=e,{featuresJSON:n,graphics:s,layerView:o,query:l,fieldInfos:u}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateClassBreaks"}),c={field:a,valueExpression:i,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return i&&t&&(n||s)&&(c.viewInfoParams=$(t),c.timeZone=t.timeZone,c.fieldInfos=u),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(c.normalizationTotal=await this._getNormalizationTotalFromMemory(a,{featuresJSON:n,graphics:s,layerView:o,query:l},r)),!n&&!s&&o&&"queryAggregateClassBreaks"in o?o.queryAggregateClassBreaks(l,c,{signal:r}):n?this.workerClient.classBreaks(c,n):be({attribute:c,features:s})}getField(e=""){const t=Qe(this.layer);return t==null?void 0:t.find(a=>a.name.toLowerCase()===(e==null?void 0:e.toLowerCase()))}getFieldUsageInfo(e){return this.getField(e)?{supportsLabelingInfo:!0,supportsRenderer:!0,supportsPopupTemplate:!0,supportsLayerQuery:!1,supportsStatistics:!0}:null}getFieldDomain(e,t){return null}async summaryStatistics(e){const{field:t}=e,a=t?this.getField(t):null,i=N(a)||C(a),r=e.sqlExpression&&!e.valueExpression&&!t;if(i||r)throw new d(`${this.adapterName}:not-supported`,"Date field and sqlExpression are not supported");return this._summaryStatsFromMemory(e,a)}async uniqueValues(e){const t=await fe(e,this);return this._uvFromMemory(e,t)}async histogram(e){const{field:t}=e,a=t?this.getField(t):null,i=N(a)||C(a),r=e.sqlExpression&&!e.valueExpression&&!t;if(i||r)throw new d(`${this.adapterName}:not-supported`,"Date field and sqlExpression are not supported");return this._histogramFromMemory(e)}async classBreaks(e){return(e.analyzeData!==!1?this._classBreaksFromMemory(e):this._classBreaksFromInterpolation(e)).catch(()=>(q(e.signal),this._classBreaksFromMemory(e)))}async queryFeatureCount(e){var i;const t=await((i=e.view)==null?void 0:i.whenLayerView(this.layer));if(!t||!("queryAggregateCount"in t)||!t.queryAggregateCount)throw new d(`${this.adapterName}:not-supported`,"LayerView is not supported.");await this._waitForLayerViewUpdate(t);const a=t.createAggregateQuery();return a.where=V(a.where,e.whereClause),E(a,e.filter),t.queryAggregateCount(a,{signal:e.signal})}generateRenderer(e,t){throw new d(`${this.adapterName}:not-supported`,"'generateRenderer' is not supported.")}heatmapStatistics(e){throw new d(`${this.adapterName}:not-supported`,"'heatmapStatistics' is not supported.")}async predominantCategories(e){const{fields:t,view:a,signal:i}=e,r=$e(t),n=await this._uvFromMemory({valueExpression:r,view:a,signal:i});return Me(n.uniqueValueInfos,t)}async getSampleFeatures(e,t){const{view:a,sampleSize:i,requiredFields:r,returnGeometry:n,filter:s,signal:o}=e;if(!a)throw new d(`${this.adapterName}:not-supported`,"'view' is required to get sample features for binning.");if(a.type==="3d")throw new d(`${this.adapterName}:not-supported`,"3d 'view' is not supported to get sample features for binning.");const l=await a.whenLayerView(this.layer);if(!("queryAggregateJSON"in l&&l.queryAggregateJSON&&"queryAggregates"in l&&l.queryAggregates))throw new d(`${this.adapterName}:not-supported`,"LayerView is not supported.");if(await this._waitForLayerViewUpdate(l),De(this,r).length)throw new d(`${this.adapterName}:insufficient-data`,"Layer does not have required fields");const u=1,c=t==="json",m=l.createAggregateQuery();m.outSpatialReference=a==null?void 0:a.spatialReference,m.returnGeometry=!!n,m.outFields=r,E(m,s);const{features:p}=c?await l.queryAggregateJSON(m,{signal:o}):await l.queryAggregates(m,{signal:o});return p.length&&i!=null&&i>0&&i<=p.length?G(p,i,u):p}load(e){const t=this.layer.load(e).then(async a=>{this.geometryType="polygon",this.objectIdField=null,this.supportsSQLExpression=!1,this._hasLocalSource=!1,this.hasQueryEngine=!0,this.minScale=a.minScale,this.maxScale=a.maxScale,this.fullExtent=a.fullExtent;const i="featureReduction"in a?a.featureReduction:null;if((i==null?void 0:i.type)!=="binning"&&(i==null?void 0:i.type)!=="cluster")throw new d(`${this.adapterName}:invalid-parameters`,`Feature reduction type ${i==null?void 0:i.type} is not supported`);this.workerClient=ae.getInstance(),await this.workerClient.open(e.signal)});return this.addResolvingPromise(t),Promise.resolve(this)}};F([v({readOnly:!0})],se.prototype,"adapterName",void 0),se=F([M("esri.smartMapping.support.adapters.FeatureLayerBinningAdapter")],se);const Ea=se;let Y=class extends Ee{constructor(e){super(e),this._featureLayerAdapter=null,this.workerClient=null,this.adapterName="scene-layer-adapter"}destroy(){var e;(e=this.workerClient)==null||e.destroy()}_hasCachedStatistics(e){return this.layer.hasCachedStatistics(e)}_updateQuery(e,t=[],a=[]){if(!e||!a.length)return e;const i=this.layer.objectIdField,r=e.clone(),n=t.filter(o=>{const l=this.layer.getField(o);return!a.includes(l.name)}),s=n.some(o=>this.layer.getField(o).name===i);return r.outFields=s?n:[...n,i],r}async _fetchFeaturesFromMemory(e,t,a){if(!e)throw new d("scene-layer-adapter:insufficient-data","view is required to fetch the features from layerView");const i=await e.whenLayerView(this.layer),r=new AbortController,n=r.signal,s=Se(()=>!i.updating,n);await Ke(s,5e3,r);const o=de(this,a,i);q(n);const l=this._updateQuery(t,a??[],o),u=await i.queryFeatures(l,{signal:n});q(n);const c=u.features;return o.length?i.whenGraphicAttributes(c,o):c}async _fetchFeaturesJSONFromMemory(e,t,a){return this._fetchFeaturesFromMemory(e,t,a).then(te)}_fetchFeaturesForStats(e,t){return B({field:e.field,normalizationField:e.normalizationField,valueExpression:e.valueExpression}).then(a=>this.getSampleFeatures({sampleSize:-1,view:e.view,returnGeometry:e.returnGeometry,requiredFields:a,signal:e.signal},t))}async _processStatsFromMemoryParams(e){const t=e.features;if(t!=null&&t.length)return t.length&&"declaredClass"in t[0]&&t[0].declaredClass==="esri.Graphic"?{graphics:t}:{featuresJSON:t};const{view:a,field:i,normalizationField:r,valueExpression:n,signal:s}=e,o=await this._fetchFeaturesForStats({field:i,valueExpression:n,normalizationField:r,view:a,signal:s},null);if(!(o!=null&&o.length))throw new d("scene-layer-adapter:insufficient-data","No features are available to calculate statistics");return{graphics:o}}_getCachedStatistics(e,t){const a=this.layer;return e.valueExpression||e.sqlExpression||e.sqlWhere||e.minValue||e.maxValue?Promise.reject(new d("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression', 'sqlExpression', 'sqlWhere', 'minValue' or 'maxValue' is specified")):a.queryCachedStatistics(t==null?void 0:t.name,{signal:e.signal}).then(i=>{const r=i.stats,{min:n,max:s,totalValuesCount:o}=r;let{avg:l,stddev:u,sum:c,variance:m,count:p}=r;return n===0&&s===0||(l=l===0?null:l,c=c===0?null:c,u=u===0?null:u,m=m===0?null:m,p=p===0?null:p),p==null&&(c!=null&&l!=null?p=Math.round(c/l):o!=null&&(p=o)),{avg:l,count:p,max:s,min:n,stddev:u,sum:c,variance:m}})}async _getNormalizationTotal(e,t,a){const i={include:["sum"]},r=(t?await this.workerClient.summaryStatistics({field:e,outStatisticTypes:i},t):await j({attribute:{field:e,outStatisticTypes:i},features:a})).sum;if(r==null)throw new d("scene-layer-adapter:invalid","invalid normalizationTotal");return r}async _getSummaryStatisticsFromMemory(e,t){const{view:a,field:i,normalizationField:r,valueExpression:n}=e,{featuresJSON:s,graphics:o}=await this._processStatsFromMemoryParams(e),l={field:i,valueExpression:n,normalizationType:e.normalizationType,normalizationField:r,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,outStatisticTypes:e.outStatisticTypes};return e.valueExpression&&a&&s&&(l.fieldType=t!=null&&t.type?Le.toJSON(t.type):null,l.viewInfoParams=$(a),l.timeZone=a.timeZone),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(l.normalizationTotal=await this._getNormalizationTotal(i,s,o)),s?this.workerClient.summaryStatistics(l,s):j({attribute:l,features:o})}_getCachedStatisticsForUniqueValues(e,t){const a=this.layer,i=t==null?void 0:t.name,r=t&&e.field?this.getFieldDomain(e.field):null;return e.valueExpression||e.sqlExpression||e.sqlWhere?Promise.reject(new d("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression', 'sqlExpression' or 'sqlWhere' is specified")):a.queryCachedStatistics(i,{signal:e.signal}).then(n=>{var p;const s=n.stats;if(!s.mostFrequentValues)throw new Error;const o=(p=n.labels)==null?void 0:p.labels,l={},u=[],c="countOF"+i;s.mostFrequentValues.forEach(y=>{const g=new ze({attributes:{}});g.attributes[i]=t&&t.name!==a.objectIdField&&(Xe(t)||N(t))?Number(y.value):y.value,g.attributes[c]=y.count,u.push(g)}),o&&o.forEach(y=>{l[y.value]=y.label});const m=new Ve({features:u});return Ne(m,{layer:this,field:e.field,labels:l,view:e.view,signal:e.signal})}).then(n=>me(n,[r],e.returnAllCodedValues))}async _getUniqueValuesFromMemory(e,t){const{view:a,field:i,field2:r,field3:n,valueExpression:s,returnAllCodedValues:o}=e,l={field:i,field2:r,field3:n,fieldDelimiter:D,valueExpression:s,domains:t,returnAllCodedValues:o},{featuresJSON:u,graphics:c}=await this._processStatsFromMemoryParams(e);return e.valueExpression&&a&&u&&(l.viewInfoParams=$(a),l.timeZone=a.timeZone),u?this.workerClient.uniqueValues(l,u):Te({attribute:l,features:c})}_getCachedStatisticsForHistogram(e,t){const a=this.layer;return e.valueExpression||e.sqlExpression||e.sqlWhere||e.normalizationType?Promise.reject(new d("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression' or 'sqlExpression' or 'sqlWhere' or 'normalizationType' is specified")):a.queryCachedStatistics(t&&t.name,{signal:e.signal}).then(i=>{const r=i.stats,{minValue:n,maxValue:s}=e,o=n??r.min,l=s??r.max,u=e.numBins||10,c=Ca(r.histogram,o,l,u);return rt(c,o,l,u)})}async _getClassBreaksFromMemory(e){const{view:t,field:a,normalizationField:i,valueExpression:r}=e,{featuresJSON:n,graphics:s}=await this._processStatsFromMemoryParams(e),o={field:a,valueExpression:r,normalizationType:e.normalizationType,normalizationField:i,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return e.valueExpression&&t&&n&&(o.viewInfoParams=$(t),o.timeZone=t.timeZone),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(o.normalizationTotal=await this._getNormalizationTotal(a,n,s)),n?this.workerClient.classBreaks(o,n):be({attribute:o,features:s})}async _getHistogramFromMemory(e){const{view:t,field:a}=e,{featuresJSON:i,graphics:r}=await this._processStatsFromMemoryParams(e),n={field:a,valueExpression:e.valueExpression,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return e.valueExpression&&t&&i&&(n.viewInfoParams=$(t),n.timeZone=t.timeZone),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(n.normalizationTotal=await this._getNormalizationTotal(a,i,r)),i?this.workerClient.histogram(n,i):pe({attribute:n,features:r})}getField(e){return this.layer.getField(e??"")}getFieldUsageInfo(e){const t=this.getField(e);if(!t)return null;const a=this.layer.getFieldUsageInfo(t.name);return{supportsLabelingInfo:a.supportsLabelingInfo,supportsPopupTemplate:a.supportsPopupTemplate,supportsRenderer:a.supportsRenderer,supportsLayerQuery:a.supportsLayerQuery,supportsStatistics:!0}}getFieldDomain(e,t){return this._featureLayerAdapter?this._featureLayerAdapter.getFieldDomain(e,t):null}createQuery(){return this.layer.createQuery()}summaryStatistics(e){const t=this.getField(e.field);if(this._featureLayerAdapter)return this._featureLayerAdapter.summaryStatistics(e);if(e.filter)throw new d("scene-layer-adapter:not-supported","filter is not supported");return this._hasCachedStatistics(t==null?void 0:t.name)?this._getCachedStatistics(e,t).catch(()=>(q(e.signal),this._getSummaryStatisticsFromMemory(e,t))):this._getSummaryStatisticsFromMemory(e,t)}async uniqueValues(e){if(this._featureLayerAdapter)return this._featureLayerAdapter.uniqueValues(e);if(e.filter)throw new d("scene-layer-adapter:not-supported","filter is not supported");const t=await fe(e,this),{field:a,field2:i}=e,r=a&&i,n=this.getField(a);return!r&&n&&this._hasCachedStatistics(n.name)?this._getCachedStatisticsForUniqueValues(e,n).catch(()=>(q(e.signal),this._getUniqueValuesFromMemory(e,t))):this._getUniqueValuesFromMemory(e,t)}histogram(e){const t=this.getField(e.field);if(this._featureLayerAdapter)return this._featureLayerAdapter.histogram(e);if(e.filter)throw new d("scene-layer-adapter:not-supported","filter is not supported");return t&&this._hasCachedStatistics(t.name)?this._getCachedStatisticsForHistogram(e,t).catch(()=>(q(e.signal),this._getHistogramFromMemory(e))):this._getHistogramFromMemory(e)}classBreaks(e){const t=this.getField(e.field);if(this._featureLayerAdapter)return this._featureLayerAdapter.classBreaks(e);if(e.filter)throw new d("scene-layer-adapter:not-supported","filter is not supported");return this._hasCachedStatistics(t==null?void 0:t.name)?Promise.reject(new d("scene-layer-adapter:not-supported","Cached stats not supported")):this._getClassBreaksFromMemory(e)}queryFeatureCount(e){return this._featureLayerAdapter?this._featureLayerAdapter.queryFeatureCount(e):Promise.reject(new d("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support count query"))}generateRenderer(e,t){return this._featureLayerAdapter?this._featureLayerAdapter.generateRenderer(e,t):Promise.reject(new d("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support generateRenderer operation"))}heatmapStatistics(e){return this._featureLayerAdapter?this._featureLayerAdapter.heatmapStatistics(e):Promise.reject(new d("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support heatmapStatistics operation"))}async predominantCategories(e){if(this._featureLayerAdapter)return this._featureLayerAdapter.predominantCategories(e);throw new d("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support predominantCategories")}async getSampleFeatures(e,t){if(e.filter)throw new d("scene-layer-adapter:not-supported","filter is not supported");const{view:a,sampleSize:i,requiredFields:r,returnGeometry:n,signal:s}=e,o=1,l=t==="json",u=this.createQuery();u.outFields=r,u.returnGeometry=!!n,u.where=null,u.num=i;let c=[];try{if(c=l?await this._fetchFeaturesJSONFromMemory(a,u,r):await this._fetchFeaturesFromMemory(a,u,r),c.length&&i!=null&&i>0&&i<=c.length)return G(c,i,o)}catch{q(s)}let m=null;if(this._featureLayerAdapter){const p={...e};delete p.view,m=await this._featureLayerAdapter.getSampleFeatures(p,t)}return m!=null&&m.length?m:G(c,c.length,o)}load(e){const t=this.layer.load(e).then(async a=>{this.workerClient=ae.getInstance(),await this.workerClient.open(e.signal);const i=a.associatedLayer;if(this.geometryType=a.geometryType,i!=null)return this._featureLayerAdapter=new _({layer:i}),this._featureLayerAdapter.load(e).then(()=>{this.objectIdField=this._featureLayerAdapter.objectIdField,this.supportsSQLExpression=this._featureLayerAdapter.supportsSQLExpression,this.minScale=this._featureLayerAdapter.minScale,this.maxScale=this._featureLayerAdapter.maxScale,this.fullExtent=this._featureLayerAdapter.fullExtent});this.objectIdField=a.objectIdField,this.supportsSQLExpression=!1,this.hasQueryEngine=!1,this.fullExtent=a.fullExtent});return this.addResolvingPromise(t),Promise.resolve(this)}};function Ca(e,t=e.minimum,a=e.maximum,i){const r=[];for(let u=0;u<i;u++)r[u]=0;const n=e.counts.length,s=e.minimum,o=e.maximum;for(let u=0;u<n;u++){const c=(u+.5)/n,m=((1-c)*s+c*o-t)/(a-t)*i;m>=0&&m<=i&&(r[m===i?i-1:Math.floor(m)]+=e.counts[u])}const l=[];return r.forEach((u,c)=>{const m=new ze({attributes:{}});m.attributes.EXPR_1=c+1,m.attributes.countOFExpr=u,l.push(m)}),new Ve({features:l})}F([v({readOnly:!0})],Y.prototype,"adapterName",void 0),F([v({constructOnly:!0})],Y.prototype,"layer",void 0),Y=F([M("esri.smartMapping.support.adapters.SceneLayerAdapter")],Y);const pt=Y;let oe=class extends pt{constructor(e){super(e),this.adapterName="point-cloud-layer-adapter"}getField(e){return this.layer.fieldsIndex.get(e??"")}getFieldUsageInfo(e){const t=this.getField(e);if(!t)return null;const a=this._hasCachedStatistics(t.name);return{supportsLabelingInfo:a,supportsPopupTemplate:a,supportsRenderer:a,supportsLayerQuery:!1,supportsStatistics:a}}getFieldDomain(){return null}load(e){const t=this.layer.load(e).then(()=>{this.geometryType="point",this.objectIdField=null,this.supportsSQLExpression=!1,this.hasQueryEngine=!1});return this.addResolvingPromise(t),Promise.resolve(this)}};F([v({readOnly:!0})],oe.prototype,"adapterName",void 0),oe=F([M("esri.smartMapping.support.adapters.PointCloudLayerAdapter")],oe);const Na=oe;let le=class extends Ie{constructor(){super(...arguments),this.adapterName="stream-layer-adapter"}async _summaryStatsFromClientQuery(e,t){var o;const{signal:a,view:i}=e,r=Oe(this,e,t);r.outStatistics=(o=r.outStatistics)==null?void 0:o.filter(l=>l.outStatisticFieldName!=="totalcount_value");const n=await this._fetchFeatureSetFromMemory(r,i,a),s=Ce(n,N(t)||C(t));return ce(s,e.outStatisticTypes)}};F([v({readOnly:!0})],le.prototype,"adapterName",void 0),le=F([M("esri.smartMapping.support.adapters.StreamLayerAdapter")],le);const Ma=le;var f;(function(e){e[e.CatalogLayer=0]="CatalogLayer",e[e.CatalogFootprintLayer=1]="CatalogFootprintLayer",e[e.CSVLayer=2]="CSVLayer",e[e.FeatureLayer=3]="FeatureLayer",e[e.GeoJSONLayer=4]="GeoJSONLayer",e[e.KnowledgeGraphSublayer=5]="KnowledgeGraphSublayer",e[e.OGCFeatureLayer=6]="OGCFeatureLayer",e[e.OrientedImageryLayer=7]="OrientedImageryLayer",e[e.ParquetLayer=8]="ParquetLayer",e[e.PointCloudLayer=9]="PointCloudLayer",e[e.SceneLayer=10]="SceneLayer",e[e.StreamLayer=11]="StreamLayer",e[e.SubtypeGroupLayer=12]="SubtypeGroupLayer",e[e.SubtypeSublayer=13]="SubtypeSublayer",e[e.WFSLayer=14]="WFSLayer"})(f||(f={}));const qe={[f.CatalogLayer]:{adapter:_,type:"catalog",label:"CatalogLayer"},[f.CatalogFootprintLayer]:{adapter:_,type:"catalog-footprint",label:"CatalogFootprintLayer"},[f.CSVLayer]:{adapter:$a,type:"csv",label:"CSVLayer"},[f.FeatureLayer]:{adapter:_,type:"feature",label:"FeatureLayer"},[f.GeoJSONLayer]:{adapter:_,type:"geojson",label:"GeoJSONLayer"},[f.KnowledgeGraphSublayer]:{adapter:_,type:"knowledge-graph-sublayer",label:"KnowledgeGraphSublayer"},[f.OGCFeatureLayer]:{adapter:Ie,type:"ogc-feature",label:"OGCFeatureLayer"},[f.OrientedImageryLayer]:{adapter:_,type:"oriented-imagery",label:"OrientedImageryLayer"},[f.ParquetLayer]:{adapter:_,type:"parquet",label:"ParquetLayer"},[f.PointCloudLayer]:{adapter:Na,type:"point-cloud",label:"PointCloudLayer"},[f.SceneLayer]:{adapter:pt,type:"scene",label:"SceneLayer"},[f.StreamLayer]:{adapter:Ma,type:"stream",label:"StreamLayer"},[f.SubtypeGroupLayer]:{adapter:_,type:"subtype-group",label:"SubtypeGroupLayer"},[f.SubtypeSublayer]:{adapter:_,type:"subtype-sublayer",label:"SubtypeSublayer"},[f.WFSLayer]:{adapter:_,type:"wfs",label:"WFSLayer"}},Ae=[f.CatalogLayer,f.CatalogFootprintLayer,f.CSVLayer,f.FeatureLayer,f.GeoJSONLayer,f.KnowledgeGraphSublayer,f.OGCFeatureLayer,f.OrientedImageryLayer,f.ParquetLayer,f.PointCloudLayer,f.SceneLayer,f.StreamLayer,f.SubtypeGroupLayer,f.SubtypeSublayer,f.WFSLayer];f.CatalogFootprintLayer,f.CSVLayer,f.FeatureLayer,f.GeoJSONLayer,f.KnowledgeGraphSublayer,f.OGCFeatureLayer,f.OrientedImageryLayer,f.ParquetLayer,f.SceneLayer,f.StreamLayer,f.SubtypeGroupLayer,f.SubtypeSublayer,f.WFSLayer;const Oa=[f.CSVLayer,f.FeatureLayer,f.GeoJSONLayer,f.OGCFeatureLayer,f.KnowledgeGraphSublayer,f.OrientedImageryLayer,f.ParquetLayer,f.StreamLayer,f.WFSLayer];function Ia(e){return e.map(t=>qe[t].label)}function Aa(e,t=Ae,a){if(e instanceof Ee)return e;const i=ka(e,t);return i?a?new Ea({layer:e}):new i({layer:e}):null}function ka(e,t=Ae){let a=null;return t.some(i=>{const r=e.type===qe[i].type;return r&&(a=qe[i].adapter),r}),a}async function Pa(e){if(!(e!=null&&e.layer)||!e.field&&!e.valueExpression)throw new d("unique-values:missing-parameters","'layer' and 'field' or 'valueExpression' parameters are required");const t=e.valueExpression||e.sqlExpression,a=t&&!e.sqlExpression;if(t){if(a){if(!e.view)throw new d("unique-values:missing-parameters","View is required when 'valueExpression' is specified")}else if(!e.valueExpression)throw new d("unique-values:missing-parameters","'valueExpression' parameters are required")}e.forBinning&&ta(e,"unique-values");const{layer:i,...r}=e,n=e.forBinning?Oa:Ae,s=Aa(i,n,e.forBinning);if(!s)throw new d("unique-values:invalid-parameters","'layer' must be one of these types: "+Ia(n).join(", "));const o={layerAdapter:s,...r},l=o.signal!=null?{signal:o.signal}:null;await s.load(l);const u=await B({field:o.field,field2:o.field2,field3:o.field3,valueExpression:o.valueExpression}),c=Bt(s,u,"unique-values:invalid-parameters");if(c)throw c;o.filter&&!o.filter.spatialRelationship&&(o.filter.spatialRelationship="intersects");const m=Dt(o.filter,"summary-statistics:invalid-parameters");if(m)throw m;return o}async function ui(e){const{layerAdapter:t,...a}=await Pa(e);return t.uniqueValues(a)}export{ui as default};
