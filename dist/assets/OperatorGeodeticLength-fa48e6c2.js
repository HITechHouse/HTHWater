import{g8 as h,g9 as S}from"./index-ee1133ea.js";import{P,j as G,a as x,f as E,d as v}from"./Transformation2D-6dd5ab6c.js";import{w}from"./OperatorShapePreservingLength-9939c19d.js";import{a8 as T,N as L,o as C,u as X,a9 as D,aa as N,t as Y,L as b,O as j,Q as q}from"./ProjectionTransformation-5bc4f99e.js";import"./SimpleGeometryCursor-e3941f41.js";class U{getOperatorType(){return 10311}supportsCurves(){return!0}accelerateGeometry(t,r,u){return!1}canAccelerateGeometry(t){return!1}execute(t,r,u,o){if(u===4)return new w().execute(t,r,o);if(r.getCoordinateSystemType()===0&&P(""),G(t),t.isEmpty()||t.getDimension()<1)return 0;const s=r.getGCS(),n=q();s.querySpheroidData(n);const c=n.majorSemiAxis,g=n.e2,l=s.getUnit().getUnitToBaseFactor();let e;const a=t.getGeometryType();if(a===x.enumPolygon?e=t.getBoundary():a===x.enumEnvelope?e=T(t):E(a)?(e=new L({vd:t.getDescription()}),e.addSegment(t,!0)):e=t,e.hasNonLinearSegments()&&(e=new C().execute(e,0,r.getTolerance(0),0,o)),s!==r){const i=r.getSRToGCSTransform();if(r.isPannable()){e=X(e,r),a===x.enumPolyline&&e===t&&(e=t.clone());const d=new v;r.getPannableExtent().queryIntervalX(d);for(let m=0,f=e.getPointCount();m<f;m++){const p=e.getXY(m);p.x=D(p.x,d),e.setXY(m,p)}}const y=e.createInstance();e=N(i,e,y,o)?y:new Y().execute(e,i,o)}return this._ExecuteMultiPathGeodeticLength(e,u,c,g,l)}_ExecuteMultiPathGeodeticLength(t,r,u,o,s){const n={stack:[],error:void 0,hasError:!1};try{const c=h(n,new b,!1);let g=0;const l=t.querySegmentIterator();for(;l.nextPath();)for(;l.hasNextSegment();){const e=l.nextSegment(),a=e.getStartXY(),i=e.getEndXY();a.scale(s),i.scale(s),j.geodeticDistance(u,o,a.x,a.y,i.x,i.y,c,null,null,r),g+=c.val}return g}catch(c){n.error=c,n.hasError=!0}finally{S(n)}}}export{U as OperatorGeodeticLength};
