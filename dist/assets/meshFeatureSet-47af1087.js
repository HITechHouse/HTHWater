import{B as y,aT as d,a7 as S,ca as g,eP as N,eQ as l,a2 as D}from"./index-ee1133ea.js";import E from"./Mesh-9168f605.js";import{i as M,a as T}from"./External-3e16a3cf.js";import{n as F,i as w}from"./meshFeatureAttributes-3b547717.js";import"./axisAngleDegrees-518cf2b4.js";import"./quat-2e3c8037.js";import"./mat3f64-e19cdcb8.js";import"./quatf64-216ddd5a.js";import"./MeshComponent-0478ab9b.js";import"./meshProperties-01219fec.js";import"./MeshLocalVertexSpace-1625db68.js";import"./MeshTransform-70c753bd.js";import"./mat4f64-7b47076d.js";import"./MeshVertexAttributes-c8dc5b24.js";import"./meshVertexSpaceUtils-6f0c1303.js";import"./triangulationUtils-87c1435a.js";import"./earcut-5a6c70eb.js";import"./Indices-c4700608.js";import"./plane-867b9076.js";import"./deduplicate-9944b2d9.js";import"./projectPointToVector-5ad9f65f.js";import"./vertexSpaceConversion-04dc2d09.js";import"./spatialReferenceEllipsoidUtils-fef0e593.js";import"./computeTranslationToOriginAndRotation-d98e4d1f.js";import"./vec3-eed24f88.js";import"./BufferView-ecc75b84.js";import"./vec4-8f193cb6.js";const I=()=>D.getLogger("esri.rest.support.meshFeatureSet");function nt(t,o,e){const r=e.features;e.features=[],delete e.geometryType;const s=y.fromJSON(e);if(s.geometryType="mesh",!e.assetMaps)return s;const n=O(o,e.assetMaps),i=t.sourceSpatialReference??d.WGS84,m=e.globalIdFieldName,{outFields:a}=t,c=a!=null&&a.length>0?b(a.includes("*")?null:new Set(a)):()=>({});for(const u of r){const p=L(u,m,i,o,n);s.features.push(new S({geometry:p,attributes:c(u)}))}return s}function b(t){return({attributes:o})=>{if(!o)return{};if(!t)return o;for(const e in o)t.has(e)||delete o[e];return o}}function L(t,o,e,r,s){const n=t.attributes[o],i=s.get(n);if(i==null||!t.geometry)return null;const m=F(t.attributes,e,r.transformFieldRoles),a=g.fromJSON(t.geometry);a.spatialReference=e;const c=w(t.attributes,r.transformFieldRoles),u=e.isGeographic?"local":"georeferenced",p=P(i);return p?E.createWithExternalSource(m,p,{extent:a,transform:c,vertexSpace:u,unitConversionDisabled:!0}):E.createIncomplete(m,{extent:a,transform:c,vertexSpace:u})}var f;function O(t,o){const e=new Map;for(const r of o){const s=r.parentGlobalId;if(s==null)continue;const n=r.assetName,i=r.assetType,m=r.assetHash,a=r.assetURL,c=r.conversionStatus,u=r.seqNo,p=N(i,t.supportedFormats);if(!p){I().error("mesh-feature-set:unknown-format",`Service returned an asset of type ${i}, but it does not list it as a supported type`);continue}const h=l(e,s,()=>({files:new Map}));l(h.files,n,()=>({name:n,type:i,mimeType:p,status:$(c),parts:[]})).parts[u]={hash:m,url:a}}return e}function P(t){const o=Array.from(t.files.values()),e=new Array;for(const r of o){if(r.status!==f.COMPLETED)return null;const s=new Array;for(const n of r.parts){if(!n)return null;s.push(new M(n.url,n.hash))}e.push(new T(r.name,r.mimeType,s))}return e}function $(t){switch(t){case"COMPLETED":case"SUBMITTED":return f.COMPLETED;case"INPROGRESS":return f.PENDING;default:return f.FAILED}}(function(t){t[t.FAILED=0]="FAILED",t[t.PENDING=1]="PENDING",t[t.COMPLETED=2]="COMPLETED"})(f||(f={}));export{O as assetMapFromAssetMapsJSON,L as extractMesh,nt as meshFeatureSetFromJSON};
