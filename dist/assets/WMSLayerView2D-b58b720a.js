import{J as a,K as h,W as E,cG as S,b as w,y as F,c4 as M,a2 as C,cA as R,ca as q}from"./index-ee1133ea.js";import{r as $}from"./BitmapContainer-0642fa0f.js";import{S as U,y as V}from"./LayerView-d3003159.js";import{_ as W}from"./ExportStrategy-07350590.js";import{i as L}from"./RefreshableLayerView-984d0fdc.js";import{a as A}from"./ExportWMSImageParameters-1e699648.js";import{i as H}from"./timeSupport-28271a82.js";import"./WGLContainer-dcdb63f4.js";import"./Utils-680e7046.js";import"./BoundingBox-7e817107.js";import"./VertexElementDescriptor-2925c6af.js";import"./ProgramTemplate-e0110707.js";import"./VertexArrayObject-20169422.js";import"./memoryEstimations-c448ab60.js";import"./vec3f32-ad1dc57f.js";import"./Container-94199b26.js";import"./StyleDefinition-afe9210c.js";import"./config-1337d16e.js";import"./earcut-5a6c70eb.js";import"./featureConversionUtils-f7d818ce.js";import"./OptimizedFeature-85f1966b.js";import"./OptimizedGeometry-3060442a.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./BitmapTechnique-4a3e1064.js";import"./GraphShaderModule-32937647.js";import"./FramebufferObject-779c4d4a.js";import"./ShaderBuilder-4d1e8c5f.js";import"./BindType-0376b293.js";import"./TechniqueType-75b634fe.js";import"./layerViewUtils-51d87912.js";const _=r=>{let t=class extends r{initialize(){this.exportImageParameters=new A({layer:this.layer})}destroy(){this.exportImageParameters=S(this.exportImageParameters)}get exportImageVersion(){var e;return(e=this.exportImageParameters)==null||e.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}get timeExtent(){var e;return H(this.layer,(e=this.view)==null?void 0:e.timeExtent,this._get("timeExtent"))}async fetchPopupFeaturesAtLocation(e,o){const{layer:s}=this;if(!e)throw new w("wmslayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:s});const{popupEnabled:c}=s;if(!c)throw new w("wmslayerview:fetchPopupFeatures","popupEnabled should be true",{popupEnabled:c});const i=this.createFetchPopupFeaturesQuery(e);if(!i)return[];const{extent:p,width:n,height:m,x:d,y}=i;if(!(p&&n&&m))throw new w("wmslayerview:fetchPopupFeatures","WMSLayer does not support fetching features.",{extent:p,width:n,height:m});const g=await s.fetchFeatureInfo(p,n,m,d,y);return F(o),g}};return a([h()],t.prototype,"exportImageParameters",void 0),a([h({readOnly:!0})],t.prototype,"exportImageVersion",null),a([h()],t.prototype,"layer",void 0),a([h({readOnly:!0})],t.prototype,"timeExtent",null),t=a([E("esri.views.layers.WMSLayerView")],t),t};let u=class extends _(L(U(V))){constructor(){super(...arguments),this.bitmapContainer=new $}supportsSpatialReference(r){return this.layer.serviceSupportsSpatialReference(r)}update(r){this.strategy.update(r).catch(t=>{M(t)||C.getLogger(this).error(t)})}attach(){const{layer:r}=this,{imageMaxHeight:t,imageMaxWidth:e}=r;this.bitmapContainer=new $,this.container.addChild(this.bitmapContainer),this.strategy=new W({container:this.bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:t,imageMaxWidth:e,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.addAttachHandles(R(()=>this.exportImageVersion,()=>this.requestUpdate()))}detach(){this.strategy=S(this.strategy),this.container.removeAllChildren()}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQuery(r){const{view:t,bitmapContainer:e}=this,{x:o,y:s}=r,{spatialReference:c}=t;let i,p=0,n=0;if(e.children.some(g=>{const{width:f,height:v,resolution:b,x:l,y:x}=g,I=l+b*f,P=x-b*v;return o>=l&&o<=I&&s<=x&&s>=P&&(i=new q({xmin:l,ymin:P,xmax:I,ymax:x,spatialReference:c}),p=f,n=v,!0)}),!i)return null;const m=i.width/p,d=Math.round((o-i.xmin)/m),y=Math.round((i.ymax-s)/m);return{extent:i,width:p,height:n,x:d,y}}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(r,t,e,o){return this.layer.fetchImageBitmap(r,t,e,{timeExtent:this.timeExtent,...o})}};a([h()],u.prototype,"strategy",void 0),a([h()],u.prototype,"updating",void 0),u=a([E("esri.views.2d.layers.WMSLayerView2D")],u);const gt=u;export{gt as default};
