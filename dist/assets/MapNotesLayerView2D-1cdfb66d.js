import{a7 as u,a6 as f,G as w,bN as c,cA as a,cB as o,cw as y,J as _,W as V}from"./index-ee1133ea.js";import{S as v,y as C}from"./LayerView-d3003159.js";import{t as g}from"./GraphicContainer-dc2b01c0.js";import{A as d}from"./GraphicsView2D-e1da9fd7.js";import"./Container-94199b26.js";import"./layerViewUtils-51d87912.js";import"./AGraphicContainer-f68d1494.js";import"./TechniqueInstance-d544a73d.js";import"./UpdateTracking2D-a4732ed0.js";import"./Utils-680e7046.js";import"./BoundingBox-7e817107.js";import"./VertexElementDescriptor-2925c6af.js";import"./FramebufferObject-779c4d4a.js";import"./VertexArrayObject-20169422.js";import"./memoryEstimations-c448ab60.js";import"./TileContainer-9c3c7eae.js";import"./WGLContainer-dcdb63f4.js";import"./ProgramTemplate-e0110707.js";import"./vec3f32-ad1dc57f.js";import"./StyleDefinition-afe9210c.js";import"./config-1337d16e.js";import"./earcut-5a6c70eb.js";import"./featureConversionUtils-f7d818ce.js";import"./OptimizedFeature-85f1966b.js";import"./OptimizedGeometry-3060442a.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./FeatureCommandQueue-3b8b1c99.js";import"./CIMSymbolHelper-4cdc79b5.js";import"./BidiEngine-664145a5.js";import"./fontUtils-c7503a97.js";import"./GeometryUtils-592d7c77.js";import"./rasterizingUtils-e5dcff2c.js";import"./floatRGBA-4bee2cac.js";import"./Rect-ea14f53a.js";import"./TechniqueType-75b634fe.js";import"./GraphShaderModule-32937647.js";import"./ShaderBuilder-4d1e8c5f.js";import"./BindType-0376b293.js";import"./streamLayerUtils-649b6193.js";import"./QueueProcessor-d4ad8824.js";import"./OverrideHelper-4e9baadc.js";import"./quantizationUtils-3e5cef60.js";import"./AttributeStore-bc75af4d.js";import"./queryUtils-7e537050.js";import"./json-48e3ea08.js";import"./timeSupport-19733aba.js";import"./TimeOnly-84d56e10.js";import"./mat3f64-e19cdcb8.js";import"./normalizeUtilsSync-9ad522f6.js";import"./dehydratedFeatures-d4b6cf50.js";const m="sublayers",l="layerView",b=new Set(["default"]);let n=class extends v(C){constructor(){super(...arguments),this._highlightIds=new Map}*graphicsViews(){this._graphicsViewsFeatureCollectionMap==null?this._graphicsViews==null?yield*[]:yield*this._graphicsViews:yield*this._graphicsViewsFeatureCollectionMap.keys()}async hitTest(i,e){return Array.from(this.graphicsViews(),t=>{const s=t.hitTest(i);if(this._graphicsViewsFeatureCollectionMap!=null){const h=this._graphicsViewsFeatureCollectionMap.get(t);for(const r of s)!r.popupTemplate&&h.popupTemplate&&(r.popupTemplate=h.popupTemplate),r.sourceLayer=r.layer=this.layer}return s}).flat().map(t=>({type:"graphic",graphic:t,layer:this.layer,mapPoint:i}))}highlight(i,e="default"){let t;typeof i=="number"?t=[i]:i instanceof u?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(h=>h&&h.uid):f.isCollection(i)&&(t=i.map(h=>h&&h.uid).toArray());const s=t==null?void 0:t.filter(w);return s!=null&&s.length?(this._addHighlight(s),c(()=>this._removeHighlight(s))):c()}update(i){for(const e of this.graphicsViews())e.processUpdate(i)}attach(){const i=this.view,e=()=>this.requestUpdate(),t=this.layer.featureCollections;if(t!=null&&t.length){this._graphicsViewsFeatureCollectionMap=new Map;for(const s of t){const h=new g(this.view.featuresTilingScheme),r=new d({view:i,graphics:s.source,renderer:s.renderer,requestUpdateCallback:e,container:h});this._graphicsViewsFeatureCollectionMap.set(r,s),this.container.addChild(r.container),this.addHandles([a(()=>s.visible,p=>r.container.visible=p,o),a(()=>r.updating,()=>this.notifyChange("updating"),o)],l)}this._updateHighlight()}else this.layer.sublayers!=null&&this.addHandles(y(()=>this.layer.sublayers,"change",()=>this._createGraphicsViews(),{onListenerAdd:()=>this._createGraphicsViews(),onListenerRemove:()=>this._destroyGraphicsViews()}),m)}detach(){this._destroyGraphicsViews(),this.removeHandles(m)}moveEnd(){}viewChange(){for(const i of this.graphicsViews())i.viewChange()}isUpdating(){for(const i of this.graphicsViews())if(i.updating)return!0;return!1}_destroyGraphicsViews(){this.container.removeAllChildren(),this.removeHandles(l);for(const i of this.graphicsViews())i.destroy();this._graphicsViews=null,this._graphicsViewsFeatureCollectionMap=null}_createGraphicsViews(){if(this._destroyGraphicsViews(),this.layer.sublayers==null)return;const i=[],e=this.view,t=()=>this.requestUpdate();for(const s of this.layer.sublayers){const h=new g(this.view.featuresTilingScheme);h.fadeTransitionEnabled=!0;const r=new d({view:e,graphics:s.graphics,requestUpdateCallback:t,container:h});this.addHandles([s.on("graphic-update",r.graphicUpdateHandler),a(()=>s.visible,p=>r.container.visible=p,o),a(()=>r.updating,()=>this.notifyChange("updating"),o)],l),this.container.addChild(r.container),i.push(r)}this._graphicsViews=i,this._updateHighlight()}_addHighlight(i){for(const e of i)if(this._highlightIds.has(e)){const t=this._highlightIds.get(e);this._highlightIds.set(e,t+1)}else this._highlightIds.set(e,1);this._updateHighlight()}_removeHighlight(i){for(const e of i)if(this._highlightIds.has(e)){const t=this._highlightIds.get(e)-1;t===0?this._highlightIds.delete(e):this._highlightIds.set(e,t)}this._updateHighlight()}_updateHighlight(){const i=Array.from(this._highlightIds.keys()),e=this._getHighlightBits(b.values());for(const t of this.graphicsViews())t.setHighlight(i.map(s=>({objectId:s,highlightFlags:e})))}};n=_([V("esri.views.2d.layers.MapNotesLayerView2D")],n);const Vi=n;export{Vi as default};
