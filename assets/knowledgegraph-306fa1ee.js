import{C as I,g0 as y,_ as G,g1 as _,b8 as J,cH as K,cI as N,cJ as V,aT as T,S as j,eu as A,g2 as b,g4 as M,g5 as O,g6 as Q}from"./index-f5157718.js";import{o as P,ap as U,S as W,aq as L,ae as B,r as k,af as H,ar as D,as as X,at as z,au as Y,aa as C}from"./arcade-86dfda78.js";import{a as u,r as l}from"./unitConversion-ef35ef59.js";import{l as Z}from"./portalUtils-6312e65e.js";import{m as $,n as tt}from"./project-56a9989e.js";import{p as nt,c as et,t as rt,a as at,b as it}from"./GraphQueryStreaming-f3d9c8a0.js";import"./ImmutableArray-d5cad66d.js";import"./shared-2d0da701.js";import"./TimeOnly-68b4478b.js";import"./number-bcbf97df.js";import"./featureConversionUtils-c3e620ab.js";import"./OptimizedFeature-6e8489c3.js";import"./memoryEstimations-e8cfae6e.js";import"./OptimizedGeometry-4a66a431.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./WhereClause-d056521f.js";let f=null;async function ot(t){const n=J.geometryServiceUrl??"";if(!n){K()||await N();for(const e of t)e.container[e.indexer]=V(e.container[e.indexer],T.WGS84);return}const r=t.map(e=>e.container[e.indexer]),i=new $({geometries:r,outSpatialReference:T.WGS84}),s=await tt(n,i);for(let e=0;e<s.length;e++){const a=t[e];a.container[a.indexer]=s[e]}}async function q(t,n){const r=new j({portal:t,id:n});return await r.load(),f===null&&(f=await G(()=>import("./knowledgeGraphService-1a23e75f.js").then(i=>i.k),["assets/knowledgeGraphService-1a23e75f.js","assets/index-f5157718.js","assets/index-149229fc.css","assets/networkEnums-cf4f8920.js","assets/GPMessage-3f4dd7cc.js","assets/GraphQueryStreaming-f3d9c8a0.js"])),await f.fetchKnowledgeGraph(r.url)}function v(t,n,r,i,s){if(t===null)return null;if(y(t)||A(t))return t;if(D(t)||D(t))return t.toJSDate();if(X(t))return t.toStorageFormat();if(z(t))return t.toStorageString();if(Y(t)){const e={};for(const a of t.keys())e[a]=v(t.field(a),n,r,i,s),e[a]instanceof b&&s.push({container:e,indexer:a});return e}if(_(t)){const e=t.map(a=>v(a,n,r,i,s));for(let a=0;a<e.length;a++)e[a]instanceof b&&s.push({container:e,indexer:a});return e}return C(t)?t.spatialReference.isWGS84?t:t.spatialReference.isWebMercator&&n?M(t):t:void 0}function st(t,n){if(!t)return t;if(t.spatialReference.isWGS84&&n.spatialReference.isWebMercator)return Q(t);if(t.spatialReference.equals(n.spatialReference))return t;throw new u(n,l.WrongSpatialReference,null)}function R(t,n){if(!t)return null;const r={};for(const i in t)r[i]=h(t[i],n);return r}function h(t,n){return t===null?null:_(t)?t.map(r=>h(r,n)):t instanceof et?{graphTypeName:t.typeName,id:t.id,graphType:"entity",properties:R(t.properties,n)}:t instanceof rt?{graphType:"object",properties:R(t.properties,n)}:t instanceof at?{graphTypeName:t.typeName,id:t.id,graphType:"relationship",originId:t.originId??null,destinationId:t.destinationId??null,properties:R(t.properties,n)}:t instanceof it?{graphType:"path",path:t.path?t.path.map(r=>h(r,n)):null}:C(t)?st(t,n):y(t)||A(t)||O(t)?t:null}function It(t){t.mode==="async"&&(t.functions.knowledgegraphbyportalitem=function(n,r){return t.standardFunctionAsync(n,r,(i,s,e)=>{var m,d;if(P(e,2,2,n,r),e[0]===null)throw new u(n,l.PortalRequired,r);if(e[0]instanceof U){const p=W(e[1]);let g;return g=(m=n.services)!=null&&m.portal?n.services.portal:I.getDefault(),q(Z(e[0],g),p)}if(y(e[0])===!1)throw new u(n,l.InvalidParameter,r);const a=W(e[0]);return q(((d=n.services)==null?void 0:d.portal)??I.getDefault(),a)})},t.signatures.push({name:"knowledgegraphbyportalitem",min:2,max:2}),t.functions.querygraph=function(n,r){return t.standardFunctionAsync(n,r,async(i,s,e)=>{var x;P(e,2,4,n,r);const a=e[0];if(!L(a))throw new u(n,l.InvalidParameter,r);const m=e[1];if(!y(m))throw new u(n,l.InvalidParameter,r);f===null&&(f=await G(()=>import("./knowledgeGraphService-1a23e75f.js").then(o=>o.k),["assets/knowledgeGraphService-1a23e75f.js","assets/index-f5157718.js","assets/index-149229fc.css","assets/networkEnums-cf4f8920.js","assets/GPMessage-3f4dd7cc.js","assets/GraphQueryStreaming-f3d9c8a0.js"]));let d=null;const p=B(e[2],null);if(!(p instanceof k||p===null))throw new u(n,l.InvalidParameter,r);if(p){let o=[];d=v(p,!0,!1,n,o),o=o.filter(c=>!c.container[c.indexer].spatialReference.isWGS84),o.length>0&&await ot(o)}const g=new nt({openCypherQuery:m,bindParameters:d});(((x=a==null?void 0:a.serviceDefinition)==null?void 0:x.currentVersion)??11.3)>11.2&&(g.outputSpatialReference=n.spatialReference);const E=(await f.executeQueryStreaming(a,g)).resultRowsStream.getReader(),S=[];try{for(;;){const{done:o,value:c}=await E.read();if(o)break;if(_(c))for(const w of c)S.push(h(w,n));else{const w=[];for(const F of c)w.push(h(c[F],n));S.push(w)}}}catch(o){throw o}return k.convertJsonToArcade(S,H(n),!1,!0)})},t.signatures.push({name:"querygraph",min:2,max:4}))}export{It as registerFunctions};
